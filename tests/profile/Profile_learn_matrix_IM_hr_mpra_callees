   Ordered by: cumulative time

Function                                                               called...
                                                                           ncalls  tottime  cumtime
<string>:1(<module>)                                                   ->       1    0.130   20.168  learn_matrix.py:133(main)
learn_matrix.py:133(main)                                              ->       1    0.000    0.000  base.py:184(__get__)
                                                                                1    0.000    0.000  frame.py:200(__init__)
                                                                            26906    0.055    0.137  frame.py:1774(__getitem__)
                                                                                2    0.000    0.001  frame.py:2114(__setitem__)
                                                                                2    0.000    0.000  frame.py:2630(reset_index)
                                                                                1    0.000    0.000  fromnumeric.py:495(transpose)
                                                                                1    0.000    0.087  gauge_fix.py:101(fix_matrix)
                                                                                2    0.000    0.000  generic.py:1046(_indexer)
                                                                                3    0.000    0.000  generic.py:2135(__getattr__)
                                                                                1    0.000    0.000  generic.py:2152(__setattr__)
                                                                                1    0.000    0.000  generic.py:2394(astype)
                                                                                1    0.000    0.001  generic.py:4243(stat_func)
                                                                                1    0.000    0.002  indexing.py:113(__setitem__)
                                                                                1    0.000    0.000  indexing.py:1185(__getitem__)
                                                                                1    0.000   18.762  learn_matrix.py:63(MaximizeMI_memsaver)
                                                                                1    0.000    0.000  learn_matrix.py:150(<dictcomp>)
                                                                                1    0.000    0.001  merge.py:700(concat)
                                                                                1    0.000    0.001  ops.py:574(wrapper)
                                                                                1    0.000    0.000  series.py:119(__init__)
                                                                            26903    0.034    0.275  series.py:519(__getitem__)
                                                                                2    0.000    0.000  series.py:1003(__iter__)
                                                                                3    0.000    0.083  series.py:2020(apply)
                                                                                1    0.000    0.008  strings.py:1299(slice)
                                                                                2    0.000    0.000  utils.py:80(choose_dict)
                                                                                1    0.000    0.000  utils.py:100(get_column_headers)
                                                                                1    0.000    0.054  utils.py:122(collapse_further)
                                                                            26899    0.579    0.624  utils.py:387(seq2mat)
                                                                                1    0.000    0.002  utils.py:448(RandEmat)
                                                                               10    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'items' of 'dict' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
                                                                                3    0.000    0.000  {range}
learn_matrix.py:63(MaximizeMI_memsaver)                                ->       3    0.000    0.000  InstantiationDecorators.py:128(stochastic)
                                                                                3    0.000    3.151  InstantiationDecorators.py:174(instantiate_p)
                                                                                1    0.000    0.000  MCMC.py:60(__init__)
                                                                                1    0.000    0.000  MCMC.py:93(use_step_method)
                                                                                1    0.000   15.611  MCMC.py:199(sample)
                                                                                1    0.000    0.000  Model.py:829(trace)
                                                                                1    0.000    0.000  fromnumeric.py:2651(mean)
                                                                                1    0.000    0.000  ram.py:132(__getitem__)
learn_matrix.py:73(emat)                                               ->       1    0.000    0.000  CommonDeterministics.py:684(new_method)
                                                                                6    0.382   18.509  EstimateMutualInfoforMImax.py:192(alt3)
                                                                                6    0.000    0.002  frame.py:2114(__setitem__)
                                                                                6    0.000    0.003  frame.py:2630(reset_index)
                                                                                6    0.000    0.023  frame.py:2881(sort)
                                                                               12    0.000    0.099  {method 'sum' of 'numpy.ndarray' objects}
EstimateMutualInfoforMImax.py:192(alt3)                                ->       6    0.001    0.003  filters.py:180(gaussian_filter1d)
                                                                                6    0.000    0.001  frame.py:1774(__getitem__)
                                                                                6    0.000    0.001  fromnumeric.py:963(searchsorted)
                                                                               12    0.000    0.000  fromnumeric.py:1631(sum)
                                                                                6    0.000    0.001  fromnumeric.py:1925(cumsum)
                                                                            17988    0.014    0.020  generic.py:1046(_indexer)
                                                                            11988    0.017    0.017  generic.py:2135(__getattr__)
                                                                             6000    0.013    1.214  generic.py:4243(stat_func)
                                                                            17988    0.030   13.986  indexing.py:1185(__getitem__)
                                                                            17982    0.127    2.437  ops.py:488(wrapper)
                                                                            12000    0.022    0.223  scimath.py:346(log2)
                                                                             5994    0.004    0.036  series.py:391(__array__)
                                                                                6    0.000    0.000  utils.py:100(get_column_headers)
                                                                               12    0.000    0.000  {len}
                                                                                6    0.000    0.000  {method 'sum' of 'numpy.ndarray' objects}
                                                                            12000    0.085    0.188  {numpy.core.multiarray.array}
                                                                                6    0.000    0.000  {numpy.core.multiarray.zeros}
                                                                               36    0.000    0.000  {range}
MCMC.py:199(sample)                                                    ->       1    0.000    0.000  MCMC.py:135(assign_step_methods)
                                                                                1    0.000   15.610  Model.py:227(sample)
                                                                                1    0.000    0.000  fromnumeric.py:2633(round_)
                                                                                1    0.000    0.000  progressbar.py:121(progress_bar)
                                                                                1    0.000    0.000  {max}
Model.py:227(sample)                                                   ->       1    0.000   15.610  MCMC.py:279(_loop)
                                                                                1    0.000    0.000  Model.py:121(seed)
                                                                                1    0.000    0.000  Model.py:254(_finalize)
                                                                                1    0.000    0.000  base.py:232(_initialize)
                                                                                1    0.000    0.000  base.py:285(connect_model)
MCMC.py:279(_loop)                                                     ->      11    0.000    0.000  Model.py:511(fget)
                                                                                1    0.000    0.000  Model.py:514(fset)
                                                                                1    0.000    0.000  Model.py:616(tally)
                                                                                1    0.000    0.000  Model.py:631(commit)
                                                                                5    0.000   15.610  StepMethods.py:485(step)
                                                                                5    0.000    0.000  progressbar.py:29(update)
StepMethods.py:485(step)                                               ->      10    0.000   15.602  StepMethods.py:307(logp_plus_loglike)
                                                                                5    0.000    0.000  StepMethods.py:478(hastings_factor)
                                                                                3    0.000    0.000  StepMethods.py:556(reject)
                                                                                5    0.005    0.008  stepper.py:23(propose)
                                                                                5    0.000    0.000  {method 'random_sample' of 'mtrand.RandomState' objects}
StepMethods.py:307(logp_plus_loglike)                                  ->      10    0.000   15.602  Node.py:25(logp_of_set)
Node.py:25(logp_of_set)                                                ->      10    0.000   15.602  PyMCObjects.py:903(get_logp)
PyMCObjects.py:903(get_logp)                                           ->      17    0.001   15.602  {method 'get' of 'pymc.LazyFunction.LazyFunction' objects}
{method 'get' of 'pymc.LazyFunction.LazyFunction' objects}             ->       5    0.000    0.000  Container.py:539(get_value)
                                                                                5    0.096   15.600  learn_matrix.py:73(emat)
indexing.py:1185(__getitem__)                                          ->   17989    0.071   13.956  indexing.py:698(_getitem_tuple)
                                                                            11989    0.047    5.566  indexing.py:1299(_getitem_axis)
indexing.py:698(_getitem_tuple)                                        ->   12000    0.007    0.010  common.py:2607(is_null_slice)
                                                                            12000    0.009    0.017  generic.py:386(ndim)
                                                                             6000    0.025    0.818  indexing.py:120(_has_valid_tuple)
                                                                             6000    0.042    0.067  indexing.py:724(_multi_take_opportunity)
                                                                            17989    0.147    8.367  indexing.py:799(_getitem_lowerdim)
                                                                            12000    0.038    4.560  indexing.py:1299(_getitem_axis)
                                                                            12000    0.008    0.046  {getattr}
indexing.py:1299(_getitem_axis)                                        ->   29977    0.050    0.208  common.py:2121(is_bool_indexer)
                                                                            35978    0.026    0.098  generic.py:318(_get_axis)
                                                                            11989    0.020    1.919  indexing.py:72(_get_label)
                                                                            17988    0.201    8.587  indexing.py:931(_getitem_iterable)
                                                                             6001    0.020    1.129  indexing.py:1203(_get_slice_axis)
                                                                            17990    0.051    0.235  indexing.py:1247(_has_valid_type)
                                                                            29977    0.018    0.064  indexing.py:1744(is_list_like_indexer)
                                                                            17988    0.013    0.013  {hasattr}
                                                                            71954    0.018    0.018  {isinstance}
indexing.py:931(_getitem_iterable)                                     ->   17988    0.036    0.155  common.py:2121(is_bool_indexer)
                                                                            17988    0.150    0.281  common.py:2347(_asarray_tuplesafe)
                                                                             6000    0.017    1.942  frame.py:2513(reindex_axis)
                                                                            17988    0.015    0.065  generic.py:318(_get_axis)
                                                                            17988    0.192    0.732  index.py:109(__new__)
                                                                            17988    0.088    0.179  index.py:740(is_unique)
                                                                            17988    0.008    0.008  index.py:914(_convert_list_indexer)
                                                                            17988    0.030    0.090  indexing.py:129(_should_validate_iterable)
                                                                            17988    0.169    2.235  indexing.py:1247(_has_valid_type)
                                                                            11988    0.020    2.677  series.py:2166(reindex_axis)
                                                                            53964    0.023    0.023  {isinstance}
indexing.py:799(_getitem_lowerdim)                                     ->   11989    0.002    0.002  base.py:318(ndim)
                                                                            17989    0.014    0.049  generic.py:318(_get_axis)
                                                                            17989    0.013    0.022  generic.py:386(ndim)
                                                                            17989    0.052    0.094  indexing.py:139(_is_nested_tuple_indexer)
                                                                            11989    0.011    5.578  indexing.py:1185(__getitem__)
                                                                            11989    0.042    2.272  indexing.py:1299(_getitem_axis)
                                                                            11989    0.010    0.038  indexing.py:1744(is_list_like_indexer)
                                                                            23990    0.016    0.068  indexing.py:1748(is_label_like)
                                                                            11989    0.008    0.066  {getattr}
                                                                            41979    0.016    0.026  {isinstance}
                                                                            29978    0.004    0.004  {len}
indexing.py:1247(_has_valid_type)                                      ->   35977    0.052    0.203  common.py:2121(is_bool_indexer)
                                                                            23988    0.039    0.262  fromnumeric.py:1852(all)
                                                                            47978    0.031    0.108  generic.py:318(_get_axis)
                                                                            11989    0.014    0.015  index.py:1045(__contains__)
                                                                            23988    0.055    2.219  index.py:1776(get_indexer_for)
                                                                            11989    0.026    0.072  indexing.py:159(_convert_scalar_indexer)
                                                                            35977    0.021    0.071  indexing.py:1744(is_list_like_indexer)
                                                                            71966    0.014    0.014  {isinstance}
                                                                            23988    0.003    0.003  {len}
InstantiationDecorators.py:174(instantiate_p)                          ->       3    0.000    0.000  InstantiationDecorators.py:46(_extract)
                                                                                3    0.000    3.151  PyMCObjects.py:655(__init__)
PyMCObjects.py:655(__init__)                                           ->       3    0.000    3.151  Node.py:210(__init__)
                                                                                3    0.000    0.000  PyMCObjects.py:903(get_logp)
                                                                                6    0.000    0.000  fromnumeric.py:1462(shape)
                                                                                2    0.000    0.000  numeric.py:464(asanyarray)
                                                                                6    0.000    0.000  {isinstance}
Node.py:210(__init__)                                                  ->       3    0.000    3.151  Node.py:112(__init__)
Node.py:112(__init__)                                                  ->       3    0.000    3.151  Node.py:135(_set_parents)
                                                                                3    0.000    0.000  {isinstance}
Node.py:135(_set_parents)                                              ->       3    0.000    0.000  PyMCObjects.py:108(__init__)
                                                                                3    0.000    0.000  PyMCObjects.py:134(attach_parents)
                                                                                3    0.000    3.151  PyMCObjects.py:780(gen_lazy_function)
PyMCObjects.py:780(gen_lazy_function)                                  ->       3    0.000    0.000  Container.py:505(__init__)
                                                                                3    0.000    0.000  Node.py:131(_get_parents)
                                                                                3    0.000    0.000  six.py:560(iteritems)
                                                                                3    0.000    3.150  {method 'force_compute' of 'pymc.LazyFunction.LazyFunction' objects}
                                                                                3    0.000    0.000  {method 'update' of 'dict' objects}
{method 'force_compute' of 'pymc.LazyFunction.LazyFunction' objects}   ->       3    0.000    0.000  Container.py:539(get_value)
                                                                                1    0.000    0.000  learn_matrix.py:67(sequences)
                                                                                1    0.000    0.000  learn_matrix.py:70(pymcdf)
                                                                                1    0.019    3.150  learn_matrix.py:73(emat)
series.py:119(__init__)                                                ->       1    0.000    0.000  common.py:2144(_default_index)
                                                                                1    0.000    0.000  common.py:2603(is_list_like)
                                                                            47992    0.081    0.081  generic.py:90(__init__)
                                                                            11989    0.014    0.093  generic.py:107(_validate_dtype)
                                                                            35983    0.017    0.024  index.py:5677(_ensure_index)
                                                                            35984    0.107    0.695  internals.py:3343(__init__)
                                                                            11988    0.004    0.004  internals.py:3444(index)
                                                                            47992    0.100    0.230  series.py:257(_set_axis)
                                                                            35984    0.154    1.225  series.py:2596(_sanitize_array)
                                                                           227879    0.048    0.049  {isinstance}
                                                                                1    0.000    0.000  {len}
series.py:2166(reindex_axis)                                           ->   11988    0.033    2.656  series.py:2149(reindex)
series.py:2149(reindex)                                                ->   11988    0.114    2.624  generic.py:1739(reindex)
generic.py:1739(reindex)                                               ->   11989    0.008    0.010  common.py:2759(_clean_reindex_fill_method)
                                                                                1    0.000    0.000  frame.py:2459(_reindex_axes)
                                                                            11989    0.052    0.056  generic.py:245(_construct_axes_from_arguments)
                                                                            11989    0.012    0.037  generic.py:318(_get_axis)
                                                                            11988    0.052    2.249  generic.py:1775(_reindex_axes)
                                                                                1    0.000    0.000  generic.py:1794(_needs_reindex_multi)
                                                                            11989    0.015    0.020  generic.py:2118(__finalize__)
                                                                            11989    0.010    0.078  generic.py:2197(_consolidate_inplace)
                                                                            11989    0.007    0.043  index.py:1245(identical)
                                                                            11988    0.003    0.003  series.py:2139(_needs_reindex_multi)
                                                                            11989    0.003    0.003  {all}
                                                                            11989    0.004    0.004  {method 'items' of 'dict' objects}
                                                                            59945    0.006    0.006  {method 'pop' of 'dict' objects}
index.py:1643(get_indexer)                                             ->   41981    0.037    0.089  common.py:2477(is_dtype_equal)
                                                                            41981    0.023    0.032  common.py:2759(_clean_reindex_fill_method)
                                                                            41981    0.015    0.015  index.py:258(dtype)
                                                                            41981    0.027    0.053  index.py:263(values)
                                                                            41981    0.177    0.177  index.py:1783(_possibly_promote)
                                                                            41981    0.094    1.661  index.py:5677(_ensure_index)
                                                                            41981    0.219    0.219  {method 'get_indexer' of 'pandas.index.IndexEngine' objects}
                                                                            41981    0.009    0.009  {pandas.algos.ensure_platform_int}
index.py:109(__new__)                                                  ->   59992    0.316    0.583  common.py:2347(_asarray_tuplesafe)
                                                                            59981    0.056    0.190  common.py:2557(is_bool_dtype)
                                                                           119984    0.224    0.317  common.py:2569(is_categorical_dtype)
                                                                            59992    0.151    0.284  index.py:204(_simple_new)
                                                                                2    0.000    0.000  index.py:258(dtype)
                                                                               10    0.000    0.000  index.py:3385(__new__)
                                                                               11    0.000    0.000  numeric.py:1910(isscalar)
                                                                               11    0.000    0.000  {hasattr}
                                                                           120015    0.029    0.029  {isinstance}
                                                                           299935    0.057    0.057  {issubclass}
                                                                            59984    0.381    0.381  {pandas.lib.infer_dtype}
                                                                               11    0.000    0.000  {sorted}
index.py:5677(_ensure_index)                                           ->   41990    0.497    1.795  index.py:109(__new__)
                                                                            41990    0.031    0.031  {hasattr}
                                                                           192003    0.035    0.035  {isinstance}
                                                                            23989    0.003    0.003  {len}
                                                                            23989    0.475    0.475  {pandas.lib.clean_index_list}
generic.py:1854(_reindex_with_indexers)                                ->    6001    0.002    0.002  frame.py:189(_constructor)
                                                                             6001    0.025    0.053  frame.py:200(__init__)
                                                                            17989    0.014    0.040  generic.py:322(_get_block_manager_axis)
                                                                            17989    0.024    0.032  generic.py:2118(__finalize__)
                                                                            17989    0.007    0.010  index.py:5677(_ensure_index)
                                                                            17989    0.087    1.971  internals.py:3124(reindex_indexer)
                                                                            11988    0.064    0.207  series.py:119(__init__)
                                                                            11988    0.003    0.003  series.py:237(_constructor)
                                                                            17989    0.004    0.004  {method 'keys' of 'dict' objects}
                                                                            17989    0.003    0.003  {pandas.algos.ensure_int64}
                                                                            17989    0.025    0.025  {sorted}
ops.py:488(wrapper)                                                    ->   17982    0.023    0.236  ops.py:437(maybe_convert_for_time_op)
                                                                            17982    0.048    0.678  ops.py:466(na_op)
                                                                            17982    0.002    0.002  ops.py:498(<lambda>)
                                                                            17982    0.136    1.275  series.py:119(__init__)
                                                                            17982    0.003    0.003  series.py:237(_constructor)
                                                                            17982    0.009    0.036  series.py:308(values)
                                                                            17982    0.016    0.065  {hasattr}
                                                                            35964    0.016    0.016  {isinstance}
generic.py:1775(_reindex_axes)                                         ->   11988    0.018    0.023  generic.py:292(_get_axis_number)
                                                                            11988    0.008    0.026  generic.py:318(_get_axis)
                                                                            11988    0.086    1.152  generic.py:1854(_reindex_with_indexers)
                                                                            11988    0.057    0.996  index.py:1862(reindex)
index.py:1776(get_indexer_for)                                         ->   23988    0.169    2.165  index.py:1643(get_indexer)
internals.py:3124(reindex_indexer)                                     ->   17989    0.008    0.008  index.py:1843(_can_reindex)
                                                                               20    0.000    0.000  internals.py:115(fill_value)
                                                                               20    0.000    0.008  internals.py:845(take_nd)
                                                                             6010    0.030    0.392  internals.py:2163(__init__)
                                                                             6010    0.003    0.003  internals.py:2208(ndim)
                                                                             6010    0.003    0.006  internals.py:2837(_consolidate_inplace)
                                                                            17991    0.118    1.427  internals.py:3168(_slice_take_blocks_ax0)
                                                                            11988    0.031    0.046  internals.py:3343(__init__)
                                                                            11988    0.002    0.002  internals.py:3499(_consolidate_inplace)
frame.py:2513(reindex_axis)                                            ->    6000    0.030    1.925  generic.py:1841(reindex_axis)
generic.py:1841(reindex_axis)                                          ->    6000    0.004    0.005  common.py:2759(_clean_reindex_fill_method)
                                                                             6000    0.007    0.011  generic.py:305(_get_axis_name)
                                                                             6000    0.004    0.014  generic.py:318(_get_axis)
                                                                             6000    0.050    1.331  generic.py:1854(_reindex_with_indexers)
                                                                             6000    0.006    0.041  generic.py:2197(_consolidate_inplace)
                                                                             6000    0.029    0.493  index.py:1862(reindex)
indexing.py:72(_get_label)                                             ->   11989    0.195    1.894  generic.py:1368(xs)
                                                                            11989    0.005    0.005  {isinstance}
generic.py:1368(xs)                                                    ->   11988    0.013    0.026  common.py:2603(is_list_like)
                                                                                1    0.000    0.000  frame.py:1774(__getitem__)
                                                                            11989    0.015    0.019  generic.py:292(_get_axis_number)
                                                                            11989    0.008    0.025  generic.py:318(_get_axis)
                                                                            11988    0.008    0.014  generic.py:386(ndim)
                                                                            11988    0.008    0.032  generic.py:1132(_is_view)
                                                                            11988    0.017    0.030  generic.py:1199(_set_is_copy)
                                                                            11988    0.010    0.077  generic.py:2197(_consolidate_inplace)
                                                                            11988    0.021    0.035  index.py:1059(__getitem__)
                                                                            11988    0.012    0.044  index.py:1553(get_loc)
                                                                            11988    0.237    0.503  internals.py:2789(fast_xs)
                                                                            23976    0.016    0.021  numeric.py:1910(isscalar)
                                                                            11988    0.099    0.865  series.py:119(__init__)
                                                                            23976    0.009    0.009  {isinstance}
index.py:1862(reindex)                                                 ->   17988    0.003    0.003  index.py:595(nlevels)
                                                                            17989    0.038    0.208  index.py:1233(equals)
                                                                            17989    0.113    0.371  index.py:1643(get_indexer)
                                                                            17989    0.033    0.789  index.py:5677(_ensure_index)
                                                                            17989    0.008    0.010  index.py:5843(_ensure_has_len)
                                                                            17989    0.016    0.016  {hasattr}
                                                                            17989    0.006    0.006  {isinstance}
                                                                            17988    0.001    0.001  {len}
internals.py:3168(_slice_take_blocks_ax0)                              ->   12006    0.081    0.373  common.py:756(take_nd)
                                                                            17991    0.067    0.661  internals.py:845(take_nd)
                                                                            17991    0.085    0.128  internals.py:2204(shape)
                                                                            17991    0.009    0.012  internals.py:2246(_is_single_block)
                                                                            12006    0.030    0.044  internals.py:3935(_get_blkno_placements)
                                                                            17991    0.042    0.089  internals.py:4461(_preprocess_slice_or_indexer)
                                                                             6003    0.001    0.001  {len}
                                                                             6003    0.001    0.001  {method 'append' of 'list' objects}
series.py:2596(_sanitize_array)                                        ->       1    0.000    0.000  common.py:1961(_possibly_convert_platform)
                                                                                1    0.000    0.000  common.py:1974(_possibly_cast_to_datetime)
                                                                            11989    0.017    0.052  common.py:2443(_coerce_to_dtype)
                                                                            11989    0.008    0.017  common.py:2507(is_datetime64_dtype)
                                                                            11989    0.010    0.022  common.py:2547(is_float_dtype)
                                                                            35983    0.067    0.883  series.py:2611(_try_cast)
                                                                            95964    0.017    0.017  {isinstance}
                                                                            35984    0.012    0.012  {issubclass}
                                                                            71969    0.040    0.058  {len}
                                                                            11989    0.010    0.010  {numpy.core.multiarray.array}
generic.py:4243(stat_func)                                             ->    6001    0.034    1.202  frame.py:4299(_reduce)
frame.py:4299(_reduce)                                                 ->    6001    0.004    0.009  common.py:2585(is_object_dtype)
                                                                             6001    0.013    0.640  frame.py:4302(<lambda>)
                                                                             6001    0.004    0.004  frame.py:4432(_get_agg_axis)
                                                                             6001    0.009    0.011  generic.py:292(_get_axis_number)
                                                                                1    0.000    0.000  generic.py:2225(_is_mixed_type)
                                                                             6001    0.004    0.106  generic.py:2309(values)
                                                                             6001    0.048    0.398  series.py:119(__init__)
indexing.py:1203(_get_slice_axis)                                      ->    6000    0.004    0.012  generic.py:318(_get_axis)
                                                                             6000    0.011    0.104  index.py:2318(slice_indexer)
                                                                             6000    0.006    0.991  indexing.py:91(_slice)
                                                                             6001    0.002    0.002  indexing.py:1753(need_slice)
                                                                             6000    0.001    0.001  {isinstance}
{isinstance}                                                           ->  143928    0.085    0.201  common.py:70(_check)
indexing.py:91(_slice)                                                 ->    6000    0.033    0.985  generic.py:1178(_slice)
generic.py:1178(_slice)                                                ->    6000    0.001    0.001  frame.py:189(_constructor)
                                                                             6000    0.026    0.054  frame.py:200(__init__)
                                                                             6000    0.006    0.015  generic.py:322(_get_block_manager_axis)
                                                                             6000    0.009    0.016  generic.py:1199(_set_is_copy)
                                                                             6000    0.004    0.006  generic.py:2118(__finalize__)
                                                                             6000    0.060    0.860  internals.py:2647(get_slice)
series.py:2611(_try_cast)                                              ->   35983    0.051    0.051  common.py:1949(_possibly_castable)
                                                                            35959    0.352    0.735  common.py:1974(_possibly_cast_to_datetime)
                                                                            35959    0.029    0.029  {numpy.core.multiarray.array}
common.py:2347(_asarray_tuplesafe)                                     ->       1    0.000    0.000  index.py:263(values)
                                                                            95964    0.066    0.296  numeric.py:394(asarray)
                                                                            59981    0.012    0.012  {hasattr}
                                                                           233951    0.063    0.063  {isinstance}
                                                                            77972    0.026    0.026  {issubclass}
                                                                               11    0.000    0.000  {pandas.lib.list_to_object_array}
internals.py:2647(get_slice)                                           ->    6000    0.018    0.091  index.py:1059(__getitem__)
                                                                            18006    0.080    0.280  internals.py:199(getitem_block)
                                                                             6000    0.034    0.419  internals.py:2163(__init__)
                                                                             6000    0.003    0.003  internals.py:2208(ndim)
                                                                             6000    0.003    0.007  internals.py:2837(_consolidate_inplace)
{numpy.core.multiarray.array}                                          ->   24002    0.033    0.033  generic.py:2135(__getattr__)
                                                                               19    0.000    0.000  index.py:248(__array__)
                                                                            12001    0.008    0.070  series.py:391(__array__)
indexing.py:120(_has_valid_tuple)                                      ->   12000    0.007    0.012  generic.py:386(ndim)
                                                                            12000    0.064    0.781  indexing.py:1247(_has_valid_type)
internals.py:2163(__init__)                                            ->   24048    0.010    0.016  index.py:5677(_ensure_index)
                                                                            24062    0.008    0.010  internals.py:2208(ndim)
                                                                            12024    0.238    0.565  internals.py:2258(_rebuild_blknos_and_blklocs)
                                                                             6020    0.021    0.080  internals.py:2384(_verify_integrity)
                                                                            12024    0.038    0.077  internals.py:2568(_consolidate_check)
common.py:756(take_nd)                                                 ->   30018    0.037    0.053  common.py:724(_get_take_nd_function)
                                                                            24014    0.156    0.336  common.py:1105(_maybe_promote)
                                                                            30018    0.004    0.004  {len}
                                                                                7    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
                                                                            30018    0.044    0.044  {numpy.core.multiarray.empty}
                                                                            60036    0.007    0.007  {pandas.algos.ensure_int64}
                                                                            12007    0.033    0.033  {pandas.algos.take_1d_int64_int64}
                                                                            11988    0.047    0.047  {pandas.algos.take_1d_object_object}
                                                                             6003    0.065    0.065  {pandas.algos.take_2d_axis0_int64_int64}
                                                                                6    0.001    0.001  {pandas.algos.take_2d_axis1_float64_float64}
                                                                                7    0.002    0.002  {pandas.algos.take_2d_axis1_int64_int64}
                                                                                7    0.004    0.004  {pandas.algos.take_2d_axis1_object_object}
internals.py:2073(make_block)                                          ->   29972    0.021    0.097  common.py:2565(is_categorical)
                                                                            24077    0.053    0.108  internals.py:64(__init__)
                                                                            47973    0.100    0.334  internals.py:1442(__init__)
                                                                            36009    0.011    0.011  {isinstance}
                                                                           179939    0.027    0.027  {issubclass}
internals.py:3343(__init__)                                            ->   12008    0.005    0.006  index.py:5677(_ensure_index)
                                                                            35984    0.151    0.523  internals.py:2073(make_block)
                                                                           143976    0.035    0.035  {isinstance}
                                                                            71988    0.023    0.038  {len}
common.py:1974(_possibly_cast_to_datetime)                             ->   23971    0.109    0.330  common.py:2049(_possibly_infer_to_datetimelike)
                                                                            11989    0.008    0.018  common.py:2507(is_datetime64_dtype)
                                                                            11989    0.009    0.017  common.py:2516(is_timedelta64_dtype)
                                                                            35960    0.009    0.009  {isinstance}
                                                                            23971    0.009    0.009  {issubclass}
ops.py:466(na_op)                                                      ->   17982    0.005    0.005  common.py:1411(_fill_zeros)
                                                                            17982    0.030    0.624  expressions.py:199(evaluate)
internals.py:845(take_nd)                                              ->   18011    0.121    0.423  common.py:756(take_nd)
                                                                             6003    0.002    0.002  internals.py:115(fill_value)
                                                                               20    0.000    0.000  internals.py:119(mgr_locs)
                                                                            18011    0.027    0.167  internals.py:128(make_block_same_class)
                                                                            18011    0.006    0.006  internals.py:228(dtype)
                                                                            18011    0.004    0.004  internals.py:874(get_values)
{method 'reduce' of 'numpy.ufunc' objects}                             ->
frame.py:4302(<lambda>)                                                ->    6001    0.021    0.627  nanops.py:38(_f)
nanops.py:38(_f)                                                       ->    6001    0.005    0.009  __init__.py:143(itervalues)
                                                                             6001    0.015    0.550  nanops.py:63(f)
                                                                             6001    0.006    0.047  {any}
expressions.py:199(evaluate)                                           ->   17982    0.027    0.568  expressions.py:99(_evaluate_numexpr)
                                                                            17982    0.014    0.026  expressions.py:180(_bool_arith_check)
utils.py:387(seq2mat)                                                  ->   53798    0.006    0.006  {len}
                                                                            26899    0.040    0.040  {numpy.core.multiarray.zeros}
numeric.py:394(asarray)                                                ->  216030    0.471    0.471  {numpy.core.multiarray.array}
expressions.py:99(_evaluate_numexpr)                                   ->   17982    0.012    0.220  expressions.py:67(_evaluate_standard)
                                                                            17982    0.051    0.321  expressions.py:74(_can_use_numexpr)
common.py:2121(is_bool_indexer)                                        ->   59970    0.044    0.225  numeric.py:394(asarray)
                                                                                2    0.000    0.000  series.py:288(dtype)
                                                                           167897    0.084    0.203  {isinstance}
internals.py:2258(_rebuild_blknos_and_blklocs)                         ->   24098    0.006    0.006  internals.py:119(mgr_locs)
                                                                            24072    0.068    0.130  internals.py:2204(shape)
                                                                            24098    0.006    0.006  {len}
                                                                            12036    0.011    0.087  {method 'any' of 'numpy.ndarray' objects}
                                                                            24072    0.018    0.018  {method 'fill' of 'numpy.ndarray' objects}
                                                                            24098    0.037    0.037  {numpy.core.multiarray.arange}
                                                                            24072    0.042    0.042  {numpy.core.multiarray.empty}
nanops.py:63(f)                                                        ->    5979    0.020    0.534  nanops.py:243(nansum)
                                                                             6001    0.001    0.001  {len}
                                                                               22    0.000    0.000  {method 'fill' of 'numpy.ndarray' objects}
                                                                               22    0.000    0.000  {numpy.core.multiarray.empty}
nanops.py:243(nansum)                                                  ->    5979    0.004    0.008  common.py:2547(is_float_dtype)
                                                                             5979    0.032    0.288  nanops.py:153(_get_values)
                                                                             5979    0.005    0.026  nanops.py:216(_wrap_results)
                                                                             5979    0.055    0.147  nanops.py:591(_maybe_null_out)
                                                                             5979    0.005    0.045  {method 'sum' of 'numpy.ndarray' objects}
{pandas.lib.infer_dtype}                                               ->       8    0.000    0.000  index.py:258(dtype)
                                                                                8    0.000    0.000  index.py:263(values)
common.py:2569(is_categorical_dtype)                                   ->       2    0.000    0.000  series.py:288(dtype)
                                                                           167996    0.107    0.107  {hasattr}
                                                                           167996    0.046    0.046  {isinstance}
generic.py:318(_get_axis)                                              ->  197908    0.199    0.293  generic.py:305(_get_axis_name)
                                                                           197908    0.070    0.070  {getattr}
internals.py:2789(fast_xs)                                             ->   35964    0.009    0.009  internals.py:119(mgr_locs)
                                                                            71928    0.033    0.033  internals.py:259(iget)
                                                                            71928    0.008    0.008  internals.py:475(_try_coerce_result)
                                                                            11988    0.004    0.004  internals.py:2279(_get_items)
                                                                            11988    0.140    0.167  internals.py:3748(_interleaved_dtype)
                                                                            23976    0.011    0.017  {len}
                                                                            11988    0.027    0.027  {numpy.core.multiarray.empty}
{pandas.lib.clean_index_list}                                          ->
common.py:2461(_get_dtype_type)                                        ->   35964    0.022    0.075  series.py:288(dtype)
                                                                           575602    0.113    0.113  {isinstance}
{len}                                                                  ->      19    0.000    0.000  frame.py:599(__len__)
                                                                           198319    0.074    0.093  index.py:242(__len__)
                                                                             6009    0.004    0.012  internals.py:2369(__len__)
                                                                                6    0.000    0.000  series.py:381(__len__)
{getattr}                                                              ->       1    0.000    0.000  Model.py:511(fget)
                                                                                2    0.000    0.000  PyMCObjects.py:880(fget)
                                                                                2    0.000    0.000  PyMCObjects.py:1055(_get_coparents)
                                                                                2    0.000    0.000  PyMCObjects.py:1065(_get_moral_neighbors)
                                                                                2    0.000    0.000  PyMCObjects.py:1075(_get_markov_blanket)
                                                                            23989    0.034    0.096  generic.py:1046(_indexer)
                                                                                1    0.000    0.000  series.py:308(values)
common.py:1105(_maybe_promote)                                         ->   24014    0.069    0.101  common.py:2569(is_categorical_dtype)
                                                                            12006    0.008    0.027  numeric.py:394(asarray)
                                                                            24014    0.010    0.010  {isinstance}
                                                                            96056    0.023    0.023  {issubclass}
                                                                            12006    0.013    0.013  {method 'astype' of 'numpy.ndarray' objects}
                                                                            12006    0.002    0.002  {pandas.lib.is_bool}
                                                                            24014    0.004    0.004  {pandas.lib.is_float}
                                                                            12006    0.001    0.001  {pandas.lib.is_integer}
internals.py:1442(__init__)                                            ->   47973    0.115    0.219  internals.py:64(__init__)
                                                                            47973    0.015    0.015  {issubclass}
common.py:2049(_possibly_infer_to_datetimelike)                        ->   23973    0.022    0.043  common.py:2603(is_list_like)
                                                                            47946    0.006    0.006  {len}
                                                                            23973    0.012    0.012  {min}
                                                                            23973    0.021    0.021  {numpy.core.multiarray.array}
                                                                            23973    0.139    0.139  {pandas.lib.infer_dtype}
{hasattr}                                                              ->       2    0.000    0.000  series.py:288(dtype)
                                                                            17982    0.011    0.049  series.py:308(values)
internals.py:64(__init__)                                              ->   72050    0.016    0.016  internals.py:119(mgr_locs)
                                                                            72050    0.076    0.099  internals.py:141(mgr_locs)
                                                                           144100    0.043    0.043  {len}
expressions.py:74(_can_use_numexpr)                                    ->   17982    0.074    0.271  fromnumeric.py:2259(prod)
index.py:204(_simple_new)                                              ->   66020    0.052    0.082  __init__.py:124(iteritems)
                                                                            66020    0.040    0.040  index.py:237(_reset_identity)
                                                                            66020    0.023    0.023  {built-in method __new__ of type object at 0x7fa3a7597bc0}
                                                                               10    0.000    0.000  {setattr}
internals.py:128(make_block_same_class)                                ->   36037    0.050    0.254  internals.py:2073(make_block)
generic.py:305(_get_axis_name)                                         ->  203910    0.067    0.067  {isinstance}
                                                                           203910    0.031    0.031  {method 'get' of 'dict' objects}
internals.py:2204(shape)                                               ->  132327    0.038    0.122  internals.py:2206(<genexpr>)
nanops.py:153(_get_values)                                             ->    5980    0.003    0.131  common.py:212(isnull)
                                                                             5979    0.005    0.049  common.py:1169(_maybe_upcast_putmask)
                                                                             5980    0.007    0.012  common.py:2495(is_integer_dtype)
                                                                                1    0.000    0.000  common.py:2557(is_bool_dtype)
                                                                             5980    0.001    0.001  nanops.py:130(_get_fill_value)
                                                                             5980    0.004    0.015  nanops.py:206(_na_ok_dtype)
                                                                             5980    0.004    0.029  nanops.py:210(_view_if_needed)
                                                                             5980    0.015    0.015  {method 'copy' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.putmask}
                                                                             5980    0.006    0.006  {pandas.lib.values_from_object}
internals.py:199(getitem_block)                                        ->   18006    0.004    0.004  internals.py:119(mgr_locs)
                                                                            18006    0.022    0.137  internals.py:128(make_block_same_class)
                                                                            18006    0.020    0.020  internals.py:177(_slice)
                                                                             5994    0.027    0.038  numeric.py:588(require)
                                                                            18006    0.002    0.002  {isinstance}
series.py:519(__getitem__)                                             ->   26903    0.031    0.208  index.py:1582(get_value)
                                                                            26903    0.022    0.032  numeric.py:1910(isscalar)
fromnumeric.py:2259(prod)                                              ->   17983    0.012    0.196  _methods.py:34(_prod)
fromnumeric.py:1852(all)                                               ->   23991    0.020    0.048  numeric.py:464(asanyarray)
                                                                            23991    0.023    0.174  {method 'all' of 'numpy.ndarray' objects}
{pandas.lib.values_from_object}                                        ->   35996    0.022    0.061  index.py:268(get_values)
                                                                            26912    0.012    0.101  series.py:319(get_values)
index.py:1233(equals)                                                  ->   17994    0.029    0.072  common.py:407(array_equivalent)
                                                                            29982    0.018    0.032  index.py:218(is_)
                                                                            29982    0.006    0.006  {isinstance}
                                                                            35988    0.022    0.082  {pandas.lib.values_from_object}
ops.py:437(maybe_convert_for_time_op)                                  ->   17982    0.013    0.089  common.py:2507(is_datetime64_dtype)
                                                                            17982    0.016    0.124  common.py:2516(is_timedelta64_dtype)
generic.py:2197(_consolidate_inplace)                                  ->   35984    0.051    0.201  generic.py:2189(_protect_consolidate)
series.py:257(_set_axis)                                               ->   17994    0.036    0.100  index.py:995(is_all_dates)
                                                                               34    0.000    0.000  index.py:3427(is_all_dates)
                                                                            47992    0.030    0.030  series.py:277(_set_subtyp)
indexing.py:1744(is_list_like_indexer)                                 ->  101936    0.067    0.151  common.py:2603(is_list_like)
                                                                            59969    0.011    0.011  {isinstance}
scimath.py:346(log2)                                                   ->   12000    0.041    0.201  scimath.py:97(_fix_real_lt_zero)
common.py:2603(is_list_like)                                           ->  137904    0.071    0.071  {hasattr}
                                                                            95937    0.049    0.049  {isinstance}
expressions.py:67(_evaluate_standard)                                  ->    5994    0.005    0.028  ops.py:696(_radd_compat)
                                                                            11988    0.180    0.180  {operator.mul}
{method 'get_indexer' of 'pandas.index.IndexEngine' objects}           ->
{issubclass}                                                           ->
index.py:1582(get_value)                                               ->       2    0.000    0.000  index.py:958(_engine)
                                                                            26903    0.034    0.034  {method 'get_value' of 'pandas.index.IndexEngine' objects}
                                                                            26903    0.003    0.003  {pandas.lib.is_float}
                                                                            53806    0.039    0.140  {pandas.lib.values_from_object}
{method 'any' of 'numpy.ndarray' objects}                              ->   36031    0.018    0.181  _methods.py:37(_any)
scimath.py:97(_fix_real_lt_zero)                                       ->   12012    0.012    0.079  fromnumeric.py:1772(any)
                                                                            12012    0.007    0.022  numeric.py:394(asarray)
                                                                            12012    0.039    0.060  type_check.py:207(isreal)
generic.py:2189(_protect_consolidate)                                  ->       6    0.000    0.000  generic.py:1172(_clear_item_cache)
                                                                            35984    0.054    0.142  generic.py:2199(f)
                                                                                2    0.000    0.000  generic.py:2227(<lambda>)
                                                                            71972    0.008    0.008  {len}
common.py:70(_check)                                                   ->  143928    0.116    0.116  {getattr}
_methods.py:34(_prod)                                                  ->   17983    0.184    0.184  {method 'reduce' of 'numpy.ufunc' objects}
series.py:319(get_values)                                              ->   44908    0.069    0.169  internals.py:3481(get_values)
common.py:2557(is_bool_dtype)                                          ->   59983    0.074    0.123  common.py:2461(_get_dtype_type)
                                                                            59983    0.011    0.011  {issubclass}
_methods.py:37(_any)                                                   ->   36031    0.162    0.162  {method 'reduce' of 'numpy.ufunc' objects}
{operator.mul}                                                         ->
{method 'sum' of 'numpy.ndarray' objects}                              ->   11976    0.006    0.170  _methods.py:31(_sum)
index.py:740(is_unique)                                                ->   17989    0.024    0.051  index.py:958(_engine)
                                                                            17989    0.014    0.040  index.py:961(<lambda>)
index.py:1783(_possibly_promote)                                       ->       7    0.000    0.000  index.py:987(inferred_type)
{method 'all' of 'numpy.ndarray' objects}                              ->   24000    0.013    0.151  _methods.py:40(_all)
_methods.py:31(_sum)                                                   ->   12010    0.165    0.165  {method 'reduce' of 'numpy.ufunc' objects}
internals.py:3481(get_values)                                          ->   44908    0.025    0.050  internals.py:112(to_dense)
                                                                            44908    0.016    0.016  internals.py:3390(_block)
                                                                            44908    0.034    0.034  {numpy.core.multiarray.array}
internals.py:3748(_interleaved_dtype)                                  ->  107892    0.013    0.013  internals.py:3752(<lambda>)
                                                                           119880    0.007    0.007  {len}
                                                                            35964    0.007    0.007  {method 'append' of 'list' objects}
_methods.py:40(_all)                                                   ->   24000    0.138    0.138  {method 'reduce' of 'numpy.ufunc' objects}
common.py:2516(is_timedelta64_dtype)                                   ->   35954    0.041    0.112  common.py:2461(_get_dtype_type)
                                                                            35954    0.008    0.008  {issubclass}
nanops.py:591(_maybe_null_out)                                         ->    5979    0.009    0.054  fromnumeric.py:1772(any)
                                                                             5979    0.002    0.002  {getattr}
                                                                             5979    0.003    0.036  {method 'sum' of 'numpy.ndarray' objects}
index.py:263(values)                                                   ->  114018    0.071    0.071  {method 'view' of 'numpy.ndarray' objects}
generic.py:2199(f)                                                     ->   35984    0.051    0.051  generic.py:2152(__setattr__)
                                                                            35984    0.023    0.038  internals.py:2821(consolidate)
frame.py:1774(__getitem__)                                             ->   26925    0.022    0.041  frame.py:1799(_getitem_column)
                                                                                3    0.000    0.003  frame.py:1816(_getitem_array)
                                                                            26928    0.023    0.026  index.py:1045(__contains__)
                                                                                3    0.000    0.000  indexing.py:1612(convert_to_index_sliceable)
                                                                            26931    0.014    0.014  {isinstance}
common.py:2507(is_datetime64_dtype)                                    ->   47946    0.043    0.091  common.py:2461(_get_dtype_type)
                                                                            47946    0.011    0.011  {issubclass}
fromnumeric.py:1772(any)                                               ->   17995    0.012    0.035  numeric.py:464(asanyarray)
                                                                            17995    0.011    0.077  {method 'any' of 'numpy.ndarray' objects}
common.py:212(isnull)                                                  ->    6010    0.011    0.130  common.py:233(_isnull_new)
numeric.py:464(asanyarray)                                             ->   72145    0.079    0.079  {numpy.core.multiarray.array}
common.py:2443(_coerce_to_dtype)                                       ->   23978    0.063    0.091  common.py:2569(is_categorical_dtype)
common.py:233(_isnull_new)                                             ->    5990    0.051    0.098  common.py:303(_isnull_ndarraylike)
                                                                            11980    0.007    0.014  {isinstance}
                                                                               20    0.000    0.000  {pandas.lib.checknull}
                                                                             6010    0.006    0.006  {pandas.lib.isscalar}
index.py:1059(__getitem__)                                             ->       1    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                             6002    0.014    0.060  index.py:343(_shallow_copy)
                                                                            18015    0.019    0.025  numeric.py:1910(isscalar)
                                                                             6002    0.001    0.001  {isinstance}
                                                                                1    0.000    0.000  {pandas.lib.values_from_object}
internals.py:2206(<genexpr>)                                           ->   84222    0.046    0.085  {len}
generic.py:1046(_indexer)                                              ->   17998    0.020    0.027  indexing.py:41(__init__)
                                                                            41981    0.011    0.011  {getattr}
                                                                            17998    0.013    0.031  {setattr}
{numpy.core.multiarray.empty}                                          ->
{method 'view' of 'numpy.ndarray' objects}                             ->       3    0.000    0.000  defmatrix.py:290(__array_finalize__)
frame.py:200(__init__)                                                 ->       1    0.000    0.001  frame.py:295(_init_dict)
                                                                                1    0.000    0.000  frame.py:343(_init_ndarray)
                                                                            12017    0.023    0.023  generic.py:90(__init__)
                                                                            12015    0.016    0.021  generic.py:120(_init_mgr)
                                                                                1    0.000    0.000  {getattr}
                                                                            24038    0.011    0.011  {isinstance}
generic.py:2309(values)                                                ->    6001    0.015    0.103  generic.py:2268(as_matrix)
series.py:391(__array__)                                               ->   17995    0.014    0.094  series.py:319(get_values)
index.py:2318(slice_indexer)                                           ->    6000    0.010    0.091  index.py:2457(slice_locs)
                                                                            12000    0.002    0.002  {pandas.lib.isscalar}
generic.py:90(__init__)                                                ->
generic.py:2268(as_matrix)                                             ->    6001    0.004    0.035  generic.py:2197(_consolidate_inplace)
                                                                             6001    0.010    0.053  internals.py:2701(as_matrix)
index.py:995(is_all_dates)                                             ->   17994    0.014    0.028  index.py:263(values)
                                                                            17994    0.004    0.004  {pandas.algos.ensure_object}
                                                                            17994    0.032    0.032  {pandas.lib.is_datetime_array}
internals.py:141(mgr_locs)                                             ->      14    0.000    0.000  numeric.py:588(require)
                                                                            72070    0.024    0.024  {isinstance}
common.py:303(_isnull_ndarraylike)                                     ->    5989    0.016    0.028  common.py:2440(is_datetimelike)
                                                                                1    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                1    0.000    0.000  series.py:119(__init__)
                                                                             5990    0.004    0.004  {getattr}
                                                                             5990    0.005    0.015  {isinstance}
                                                                                1    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                1    0.001    0.001  {pandas.lib.isnullobj}
common.py:2565(is_categorical)                                         ->   59964    0.030    0.076  {isinstance}
indexing.py:139(_is_nested_tuple_indexer)                              ->   17989    0.016    0.016  frame.py:414(axes)
                                                                            17989    0.005    0.005  {any}
                                                                            35978    0.021    0.021  {isinstance}
generic.py:107(_validate_dtype)                                        ->   11989    0.023    0.079  common.py:2443(_coerce_to_dtype)
index.py:242(__len__)                                                  ->  198319    0.019    0.019  {len}
index.py:2457(slice_locs)                                              ->   11994    0.024    0.080  index.py:2399(get_slice_bound)
                                                                                6    0.000    0.000  {len}
indexing.py:129(_should_validate_iterable)                             ->   17988    0.012    0.044  generic.py:318(_get_axis)
                                                                            17988    0.012    0.012  index.py:755(is_floating)
                                                                            17988    0.004    0.004  {isinstance}
generic.py:2152(__setattr__)                                           ->      10    0.000    0.000  generic.py:412(_set_axis)
common.py:2477(is_dtype_equal)                                         ->   83962    0.042    0.052  common.py:2461(_get_dtype_type)
internals.py:4461(_preprocess_slice_or_indexer)                        ->   17991    0.014    0.035  numeric.py:464(asanyarray)
                                                                            35982    0.010    0.010  {isinstance}
                                                                            17991    0.002    0.002  {len}
generic.py:292(_get_axis_number)                                       ->   53987    0.008    0.008  {method 'get' of 'dict' objects}
                                                                            53987    0.009    0.009  {pandas.lib.is_integer}
index.py:1553(get_loc)                                                 ->       7    0.000    0.000  index.py:958(_engine)
                                                                            24036    0.037    0.037  {method 'get_loc' of 'pandas.index.IndexEngine' objects}
                                                                            24036    0.026    0.026  {pandas.lib.values_from_object}
gauge_fix.py:101(fix_matrix)                                           ->       1    0.000    0.030  basic.py:557(pinv)
                                                                                2    0.000    0.000  defmatrix.py:244(__new__)
                                                                                2    0.000    0.010  defmatrix.py:338(__mul__)
                                                                                1    0.000    0.000  defmatrix.py:928(getT)
                                                                                1    0.046    0.047  gauge_fix.py:6(get_Lambda_mm)
                                                                                1    0.000    0.000  {method 'flatten' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.array}
series.py:308(values)                                                  ->   35981    0.026    0.065  internals.py:3477(values)
series.py:2020(apply)                                                  ->       3    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                3    0.000    0.000  generic.py:2118(__finalize__)
                                                                                3    0.000    0.000  series.py:119(__init__)
                                                                                3    0.000    0.000  series.py:237(_constructor)
                                                                                6    0.000    0.000  {isinstance}
                                                                                6    0.000    0.000  {len}
                                                                                3    0.018    0.082  {pandas.lib.map_infer}
                                                                                3    0.000    0.000  {pandas.lib.values_from_object}
{pandas.lib.map_infer}                                                 ->   27000    0.058    0.064  learn_matrix.py:146(check_sequences)
__init__.py:124(iteritems)                                             ->   66020    0.014    0.014  {getattr}
                                                                            66020    0.016    0.016  {method 'iteritems' of 'dict' objects}
index.py:2399(get_slice_bound)                                         ->   11994    0.011    0.043  index.py:1553(get_loc)
                                                                            11994    0.005    0.007  index.py:3323(_maybe_cast_slice_bound)
                                                                            23988    0.006    0.006  {isinstance}
internals.py:2384(_verify_integrity)                                   ->    6052    0.003    0.003  internals.py:220(shape)
                                                                             6020    0.017    0.034  internals.py:2204(shape)
                                                                             6020    0.002    0.002  internals.py:2279(_get_items)
                                                                             6020    0.003    0.005  {len}
                                                                             6020    0.004    0.013  {sum}
numeric.py:1910(isscalar)                                              ->   68908    0.021    0.021  {isinstance}
internals.py:2568(_consolidate_check)                                  ->   24091    0.029    0.036  internals.py:232(ftype)
                                                                            24064    0.002    0.002  {len}
series.py:288(dtype)                                                   ->   35984    0.021    0.053  internals.py:3453(dtype)
common.py:407(array_equivalent)                                        ->   35996    0.019    0.043  numeric.py:394(asarray)
                                                                                4    0.000    0.000  numeric.py:2328(array_equal)
                                                                               13    0.000    0.000  {issubclass}
                                                                                2    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                2    0.000    0.000  {pandas.algos.ensure_object}
                                                                                1    0.000    0.000  {pandas.lib.array_equivalent_object}
indexing.py:159(_convert_scalar_indexer)                               ->   11993    0.008    0.027  generic.py:318(_get_axis)
                                                                            11993    0.010    0.013  index.py:773(_convert_scalar_indexer)
                                                                            11993    0.005    0.005  {min}
generic.py:386(ndim)                                                   ->   59995    0.025    0.032  internals.py:2208(ndim)
indexing.py:1748(is_label_like)                                        ->   17989    0.012    0.042  indexing.py:1744(is_list_like_indexer)
                                                                            23990    0.009    0.009  {isinstance}
indexing.py:724(_multi_take_opportunity)                               ->    6000    0.003    0.003  indexing.py:731(<genexpr>)
                                                                             6000    0.003    0.018  {all}
                                                                             6000    0.004    0.004  {isinstance}
internals.py:3477(values)                                              ->   35981    0.014    0.022  internals.py:3394(_values)
                                                                            35981    0.017    0.017  {method 'view' of 'numpy.ndarray' objects}
{pandas.algos.take_2d_axis0_int64_int64}                               ->
learn_matrix.py:146(check_sequences)                                   ->   27000    0.006    0.006  {method 'issubset' of 'set' objects}
index.py:343(_shallow_copy)                                            ->    6015    0.014    0.026  index.py:204(_simple_new)
                                                                                3    0.000    0.000  index.py:263(values)
                                                                             6015    0.016    0.017  index.py:327(_get_attributes_dict)
                                                                             6015    0.003    0.003  {method 'update' of 'dict' objects}
index.py:268(get_values)                                               ->   35996    0.021    0.038  index.py:263(values)
{method 'get' of 'dict' objects}                                       ->
type_check.py:207(isreal)                                              ->   12012    0.007    0.021  type_check.py:141(imag)
generic.py:2118(__finalize__)                                          ->   23985    0.004    0.004  {getattr}
                                                                            36000    0.011    0.011  {isinstance}
generic.py:245(_construct_axes_from_arguments)                         ->   11990    0.002    0.002  {method 'get' of 'dict' objects}
                                                                            11990    0.002    0.002  {method 'pop' of 'dict' objects}
internals.py:3394(_values)                                             ->   71965    0.021    0.021  internals.py:3390(_block)
generic.py:322(_get_block_manager_axis)                                ->   23998    0.029    0.035  generic.py:292(_get_axis_number)
internals.py:2208(ndim)                                                ->  108091    0.012    0.012  {len}
utils.py:122(collapse_further)                                         ->       1    0.000    0.001  frame.py:2630(reset_index)
                                                                                1    0.000    0.000  generic.py:1566(drop)
                                                                                1    0.000    0.000  generic.py:3108(groupby)
                                                                                1    0.000    0.052  groupby.py:105(f)
internals.py:3453(dtype)                                               ->   35984    0.020    0.033  internals.py:3394(_values)
internals.py:2701(as_matrix)                                           ->    6001    0.001    0.001  internals.py:874(get_values)
                                                                             6001    0.020    0.041  internals.py:2246(_is_single_block)
                                                                             6001    0.000    0.000  {len}
internals.py:2246(_is_single_block)                                    ->   12006    0.002    0.002  internals.py:119(mgr_locs)
                                                                            12006    0.004    0.005  internals.py:2208(ndim)
                                                                            18009    0.005    0.017  {len}
common.py:724(_get_take_nd_function)                                   ->   30018    0.015    0.015  {method 'get' of 'dict' objects}
{any}                                                                  ->       2    0.000    0.000  groupby.py:2097(<genexpr>)
                                                                                2    0.000    0.000  groupby.py:2098(<genexpr>)
                                                                            24004    0.015    0.042  nanops.py:41(<genexpr>)
groupby.py:105(f)                                                      ->       1    0.000    0.000  groupby.py:480(_set_selection_from_grouper)
                                                                                1    0.000    0.052  groupby.py:2559(_cython_agg_general)
groupby.py:2559(_cython_agg_general)                                   ->       1    0.000    0.051  groupby.py:2586(_cython_agg_blocks)
                                                                                1    0.000    0.000  groupby.py:3251(_wrap_agged_blocks)
common.py:1949(_possibly_castable)                                     ->
groupby.py:2586(_cython_agg_blocks)                                    ->       1    0.000    0.049  groupby.py:1482(aggregate)
                                                                                1    0.000    0.001  groupby.py:3214(_get_data_to_aggregate)
                                                                                1    0.000    0.000  internals.py:119(mgr_locs)
                                                                                1    0.000    0.000  internals.py:467(_try_operate)
                                                                                1    0.000    0.001  internals.py:479(_try_coerce_and_cast_result)
                                                                                1    0.000    0.000  internals.py:2073(make_block)
                                                                                1    0.000    0.000  internals.py:2279(_get_items)
                                                                                1    0.000    0.000  internals.py:2616(get_numeric_data)
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
{method 'argsort' of 'numpy.ndarray' objects}                          ->
index.py:958(_engine)                                                  ->   18008    0.017    0.026  {len}
internals.py:112(to_dense)                                             ->   44908    0.025    0.025  {method 'view' of 'numpy.ndarray' objects}
generic.py:2135(__getattr__)                                           ->       3    0.000    0.000  frame.py:1774(__getitem__)
                                                                                3    0.000    0.000  generic.py:366(_info_axis)
                                                                                3    0.000    0.000  index.py:1045(__contains__)
groupby.py:1482(aggregate)                                             ->       2    0.000    0.000  common.py:2495(is_integer_dtype)
                                                                                1    0.000    0.000  common.py:2526(is_datetime_or_timedelta_dtype)
                                                                                1    0.000    0.000  common.py:2541(is_numeric_dtype)
                                                                                1    0.000    0.000  common.py:2557(is_bool_dtype)
                                                                                1    0.000    0.048  groupby.py:1382(ngroups)
                                                                                2    0.000    0.000  groupby.py:1443(_get_aggregate_function)
                                                                                1    0.000    0.001  groupby.py:1566(_aggregate)
                                                                                1    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'fill' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                2    0.000    0.000  {method 'swapaxes' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
                                                                                1    0.000    0.000  {pandas.algos.ensure_float64}
common.py:1169(_maybe_upcast_putmask)                                  ->    5979    0.004    0.043  {method 'any' of 'numpy.ndarray' objects}
groupby.py:1382(ngroups)                                               ->       1    0.000    0.048  groupby.py:1393(result_index)
                                                                                1    0.000    0.000  {len}
groupby.py:1393(result_index)                                          ->       1    0.000    0.000  groupby.py:1319(names)
                                                                                1    0.000    0.048  groupby.py:2026(group_index)
                                                                                1    0.000    0.000  index.py:668(rename)
                                                                                1    0.000    0.000  {len}
groupby.py:2026(group_index)                                           ->       1    0.000    0.048  groupby.py:2032(_make_labels)
groupby.py:2032(_make_labels)                                          ->       1    0.000    0.047  algorithms.py:98(factorize)
                                                                                1    0.000    0.000  index.py:109(__new__)
algorithms.py:98(factorize)                                            ->       1    0.000    0.000  algorithms.py:403(_get_data_algo)
                                                                                1    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                1    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                                1    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
                                                                                1    0.040    0.040  {method 'argsort' of 'numpy.ndarray' objects}
                                                                                1    0.006    0.006  {method 'get_labels' of 'pandas.hashtable.PyObjectHashTable' objects}
                                                                                1    0.000    0.000  {method 'put' of 'numpy.ndarray' objects}
                                                                                2    0.001    0.001  {method 'take' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'to_array' of 'pandas.hashtable.ObjectVector' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.arange}
                                                                                1    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                1    0.000    0.000  {numpy.core.multiarray.putmask}
                                                                                1    0.000    0.000  {pandas.algos.ensure_platform_int}
gauge_fix.py:6(get_Lambda_mm)                                          ->       1    0.000    0.000  defmatrix.py:244(__new__)
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
                                                                             1413    0.001    0.001  {range}
{pandas.algos.take_1d_object_object}                                   ->
common.py:2759(_clean_reindex_fill_method)                             ->   59970    0.012    0.012  common.py:2738(_clean_fill_method)
generic.py:1199(_set_is_copy)                                          ->   17990    0.020    0.020  generic.py:2152(__setattr__)
internals.py:3935(_get_blkno_placements)                               ->    6012    0.001    0.001  {pandas.algos.ensure_int64}
                                                                             6012    0.014    0.014  {pandas.lib.get_blkno_indexers}
index.py:1245(identical)                                               ->   11989    0.012    0.036  index.py:1233(equals)
index.py:1045(__contains__)                                            ->      10    0.000    0.000  index.py:958(_engine)
                                                                               10    0.000    0.000  index.py:961(<lambda>)
                                                                            38962    0.004    0.004  {hash}
nanops.py:41(<genexpr>)                                                ->   18003    0.011    0.026  nanops.py:33(check)
frame.py:1799(_getitem_column)                                         ->   26925    0.015    0.020  generic.py:1079(_get_item_cache)
                                                                                9    0.000    0.000  index.py:740(is_unique)
index.py:961(<lambda>)                                                 ->   18007    0.013    0.026  index.py:263(values)
index.py:237(_reset_identity)                                          ->
{numpy.core.multiarray.zeros}                                          ->
internals.py:119(mgr_locs)                                             ->
numeric.py:588(require)                                                ->    6008    0.002    0.002  {method 'upper' of 'str' objects}
                                                                             6008    0.009    0.009  {numpy.core.multiarray.array}
internals.py:2821(consolidate)                                         ->       6    0.000    0.001  internals.py:2163(__init__)
                                                                            23995    0.008    0.009  internals.py:2560(is_consolidated)
                                                                                6    0.000    0.003  internals.py:2837(_consolidate_inplace)
                                                                            11989    0.002    0.002  internals.py:3493(is_consolidated)
{numpy.core.multiarray.arange}                                         ->
internals.py:3390(_block)                                              ->
{method 'get_loc' of 'pandas.index.IndexEngine' objects}               ->       6    0.000    0.000  index.py:961(<lambda>)
internals.py:232(ftype)                                                ->   24091    0.007    0.007  internals.py:228(dtype)
{method 'get_value' of 'pandas.index.IndexEngine' objects}             ->       2    0.000    0.000  index.py:961(<lambda>)
internals.py:259(iget)                                                 ->
{pandas.algos.take_1d_int64_int64}                                     ->
index.py:218(is_)                                                      ->   29993    0.014    0.014  {getattr}
{pandas.lib.is_datetime_array}                                         ->
generic.py:1132(_is_view)                                              ->   11988    0.017    0.023  internals.py:2591(is_view)
{setattr}                                                              ->   17998    0.018    0.018  generic.py:2152(__setattr__)
series.py:277(_set_subtyp)                                             ->
basic.py:557(pinv)                                                     ->       1    0.030    0.030  basic.py:456(lstsq)
                                                                                1    0.000    0.000  function_base.py:550(asarray_chkfinite)
                                                                                1    0.000    0.000  numeric.py:2125(identity)
common.py:2547(is_float_dtype)                                         ->   17969    0.009    0.011  common.py:2461(_get_dtype_type)
                                                                            17969    0.004    0.004  {issubclass}
basic.py:456(lstsq)                                                    ->       1    0.000    0.000  lapack.py:255(get_lapack_funcs)
                                                                                2    0.000    0.000  misc.py:126(_datacopied)
                                                                                1    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  {len}
                                                                                1    0.000    0.000  {map}
                                                                                1    0.000    0.000  {method 'astype' of 'numpy.generic' objects}
nanops.py:210(_view_if_needed)                                         ->    5980    0.006    0.025  common.py:2526(is_datetime_or_timedelta_dtype)
ops.py:696(_radd_compat)                                               ->    5994    0.024    0.024  ops.py:697(<lambda>)
common.py:2440(is_datetimelike)                                        ->       1    0.000    0.000  series.py:288(dtype)
                                                                             5989    0.004    0.012  {isinstance}
indexing.py:41(__init__)                                               ->   11989    0.002    0.002  base.py:318(ndim)
                                                                             6009    0.003    0.006  generic.py:386(ndim)
nanops.py:33(check)                                                    ->   18003    0.013    0.013  {hasattr}
                                                                             6001    0.003    0.003  {issubclass}
nanops.py:216(_wrap_results)                                           ->    5979    0.004    0.013  common.py:2507(is_datetime64_dtype)
                                                                             5979    0.003    0.008  common.py:2516(is_timedelta64_dtype)
expressions.py:180(_bool_arith_check)                                  ->   17982    0.012    0.012  expressions.py:170(_has_bool_dtype)
{sorted}                                                               ->      48    0.000    0.000  internals.py:3815(<lambda>)
common.py:2526(is_datetime_or_timedelta_dtype)                         ->    5982    0.009    0.017  common.py:2461(_get_dtype_type)
                                                                             5982    0.002    0.002  {issubclass}
ops.py:697(<lambda>)                                                   ->
internals.py:2591(is_view)                                             ->   11988    0.005    0.005  internals.py:87(is_view)
                                                                            11988    0.001    0.001  {len}
frame.py:2881(sort)                                                    ->       6    0.000    0.023  frame.py:2917(sort_index)
frame.py:2917(sort_index)                                              ->       6    0.000    0.000  common.py:2644(is_sequence)
                                                                                6    0.000    0.000  frame.py:189(_constructor)
                                                                                6    0.000    0.000  frame.py:200(__init__)
                                                                                6    0.000    0.001  frame.py:1774(__getitem__)
                                                                                6    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                6    0.000    0.000  generic.py:318(_get_axis)
                                                                                6    0.000    0.000  generic.py:322(_get_block_manager_axis)
                                                                                6    0.000    0.000  generic.py:2118(__finalize__)
                                                                                6    0.001    0.013  groupby.py:3696(_nargsort)
                                                                                6    0.000    0.009  internals.py:3255(take)
                                                                                6    0.000    0.000  series.py:308(values)
                                                                               12    0.000    0.000  {isinstance}
                                                                                6    0.000    0.000  {len}
{built-in method __new__ of type object at 0x7fa3a7597bc0}             ->
generic.py:120(_init_mgr)                                              ->   12015    0.005    0.005  {method 'items' of 'dict' objects}
{all}                                                                  ->       2    0.000    0.000  groupby.py:2103(<genexpr>)
                                                                                2    0.000    0.000  indexing.py:405(<genexpr>)
                                                                             6000    0.003    0.015  indexing.py:731(<genexpr>)
type_check.py:141(imag)                                                ->   12012    0.006    0.014  numeric.py:464(asanyarray)
generic.py:1079(_get_item_cache)                                       ->      20    0.000    0.001  frame.py:2102(_box_item_values)
                                                                               20    0.000    0.000  generic.py:1093(_set_as_cached)
                                                                               20    0.000    0.000  generic.py:2152(__setattr__)
                                                                               20    0.000    0.001  internals.py:2844(get)
                                                                            26925    0.003    0.003  {method 'get' of 'dict' objects}
internals.py:177(_slice)                                               ->
{method 'fill' of 'numpy.ndarray' objects}                             ->
indexing.py:731(<genexpr>)                                             ->    6000    0.003    0.012  indexing.py:1744(is_list_like_indexer)
{min}                                                                  ->
index.py:327(_get_attributes_dict)                                     ->    6015    0.001    0.001  {getattr}
{method 'copy' of 'numpy.ndarray' objects}                             ->       3    0.000    0.000  defmatrix.py:290(__array_finalize__)
{method 'iteritems' of 'dict' objects}                                 ->
frame.py:414(axes)                                                     ->
internals.py:2837(_consolidate_inplace)                                ->      12    0.000    0.001  internals.py:2258(_rebuild_blknos_and_blklocs)
                                                                            12033    0.005    0.005  internals.py:2560(is_consolidated)
                                                                               12    0.000    0.003  internals.py:3809(_consolidate)
index.py:258(dtype)                                                    ->
nanops.py:206(_na_ok_dtype)                                            ->    5980    0.005    0.011  common.py:2501(is_int_or_datetime_dtype)
{pandas.lib.get_blkno_indexers}                                        ->
internals.py:228(dtype)                                                ->
index.py:773(_convert_scalar_indexer)                                  ->   11993    0.003    0.003  {pandas.lib.is_float}
{sum}                                                                  ->       3    0.000    0.000  common.py:2194(<genexpr>)
                                                                            12072    0.006    0.009  internals.py:2386(<genexpr>)
internals.py:2560(is_consolidated)                                     ->       8    0.000    0.000  internals.py:2568(_consolidate_check)
internals.py:3752(<lambda>)                                            ->
{method 'astype' of 'numpy.ndarray' objects}                           ->
groupby.py:3696(_nargsort)                                             ->       6    0.000    0.000  common.py:212(isnull)
                                                                                6    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                6    0.000    0.000  fromnumeric.py:1380(nonzero)
                                                                                6    0.000    0.000  numeric.py:464(asanyarray)
                                                                                6    0.000    0.000  {len}
                                                                                6    0.011    0.011  {method 'argsort' of 'numpy.ndarray' objects}
                                                                                6    0.000    0.000  {numpy.core.multiarray.arange}
                                                                                6    0.000    0.000  {numpy.core.multiarray.concatenate}
common.py:2495(is_integer_dtype)                                       ->    5988    0.003    0.003  common.py:2461(_get_dtype_type)
                                                                            11971    0.003    0.003  {issubclass}
common.py:2738(_clean_fill_method)                                     ->
index.py:755(is_floating)                                              ->
{pandas.lib.is_integer}                                                ->
internals.py:2369(__len__)                                             ->    6009    0.002    0.002  internals.py:2279(_get_items)
                                                                             6009    0.003    0.006  {len}
expressions.py:170(_has_bool_dtype)                                    ->
internals.py:3255(take)                                                ->       9    0.000    0.001  index.py:1148(take)
                                                                                3    0.000    0.000  indexing.py:1695(maybe_convert_indices)
                                                                                9    0.000    0.000  internals.py:2204(shape)
                                                                                9    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                9    0.000    0.010  internals.py:3124(reindex_indexer)
                                                                                9    0.000    0.000  numeric.py:464(asanyarray)
                                                                                9    0.000    0.000  {isinstance}
                                                                                3    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
{pandas.lib.is_float}                                                  ->
common.py:2501(is_int_or_datetime_dtype)                               ->    5980    0.004    0.004  common.py:2461(_get_dtype_type)
                                                                             5981    0.002    0.002  {issubclass}
{pandas.algos.ensure_int64}                                            ->
index.py:5843(_ensure_has_len)                                         ->   17989    0.002    0.002  {len}
common.py:2607(is_null_slice)                                          ->   12003    0.003    0.003  {isinstance}
defmatrix.py:338(__mul__)                                              ->       2    0.000    0.000  defmatrix.py:66(asmatrix)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.010    0.010  {numpy.core._dotblas.dot}
{numpy.core._dotblas.dot}                                              ->       2    0.000    0.000  defmatrix.py:290(__array_finalize__)
{pandas.algos.ensure_platform_int}                                     ->
internals.py:2386(<genexpr>)                                           ->    6052    0.001    0.001  internals.py:119(mgr_locs)
                                                                             6052    0.002    0.002  {len}
common.py:2585(is_object_dtype)                                        ->    6017    0.003    0.003  common.py:2461(_get_dtype_type)
                                                                             6017    0.001    0.001  {issubclass}
{method 'items' of 'dict' objects}                                     ->
__init__.py:143(itervalues)                                            ->    6001    0.002    0.002  {getattr}
                                                                             6001    0.002    0.002  {method 'itervalues' of 'dict' objects}
{method 'append' of 'list' objects}                                    ->
{method 'pop' of 'dict' objects}                                       ->
strings.py:1299(slice)                                                 ->       1    0.000    0.008  strings.py:768(str_slice)
                                                                                1    0.000    0.000  strings.py:1077(_wrap_result)
index.py:914(_convert_list_indexer)                                    ->       2    0.000    0.000  common.py:2495(is_integer_dtype)
index.py:1843(_can_reindex)                                            ->
strings.py:768(str_slice)                                              ->       1    0.000    0.008  strings.py:119(_na_map)
strings.py:119(_na_map)                                                ->       1    0.000    0.008  strings.py:124(_map)
strings.py:124(_map)                                                   ->       1    0.000    0.001  common.py:212(isnull)
                                                                                1    0.000    0.000  series.py:308(values)
                                                                                2    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
                                                                                1    0.005    0.008  {pandas.lib.map_infer_mask}
stepper.py:23(propose)                                                 ->       5    0.000    0.000  PyMCObjects.py:823(get_value)
                                                                                5    0.000    0.000  PyMCObjects.py:834(set_value)
                                                                               20    0.000    0.000  fromnumeric.py:1631(sum)
                                                                                5    0.000    0.000  numeric.py:81(zeros_like)
                                                                              435    0.000    0.002  numeric.py:141(ones)
                                                                               10    0.000    0.000  scimath.py:176(sqrt)
                                                                                5    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                                5    0.000    0.000  {method 'standard_normal' of 'mtrand.RandomState' objects}
                                                                                5    0.000    0.000  {range}
internals.py:475(_try_coerce_result)                                   ->
{pandas.lib.isscalar}                                                  ->
internals.py:2279(_get_items)                                          ->
{pandas.lib.map_infer_mask}                                            ->   27000    0.003    0.003  strings.py:783(<lambda>)
index.py:3323(_maybe_cast_slice_bound)                                 ->   11994    0.002    0.002  {pandas.lib.is_integer}
{method 'issubset' of 'set' objects}                                   ->
internals.py:874(get_values)                                           ->
{method 'get_labels' of 'pandas.hashtable.PyObjectHashTable' objects}  ->
series.py:237(_constructor)                                            ->
internals.py:87(is_view)                                               ->
common.py:1411(_fill_zeros)                                            ->
{pandas.algos.take_2d_axis1_object_object}                             ->
frame.py:2630(reset_index)                                             ->       7    0.000    0.003  frame.py:2213(insert)
                                                                                7    0.000    0.000  frame.py:2666(_maybe_casted_values)
                                                                                6    0.000    0.000  generic.py:702(__contains__)
                                                                                9    0.000    0.000  generic.py:2152(__setattr__)
                                                                                1    0.000    0.000  generic.py:2414(copy)
                                                                               16    0.000    0.000  {isinstance}
                                                                                9    0.000    0.000  {len}
                                                                                9    0.000    0.000  {numpy.core.multiarray.arange}
{hash}                                                                 ->       1    0.000    0.000  generic.py:661(__hash__)
{method 'keys' of 'dict' objects}                                      ->
base.py:318(ndim)                                                      ->
{pandas.algos.ensure_object}                                           ->
frame.py:4432(_get_agg_axis)                                           ->
internals.py:3444(index)                                               ->
filters.py:180(gaussian_filter1d)                                      ->       6    0.000    0.002  filters.py:110(correlate1d)
                                                                              960    0.000    0.000  {math.exp}
                                                                               18    0.000    0.000  {range}
{method 'update' of 'dict' objects}                                    ->
frame.py:2114(__setitem__)                                             ->       1    0.000    0.000  frame.py:2133(_setitem_array)
                                                                               10    0.000    0.003  frame.py:2192(_set_item)
                                                                               11    0.000    0.000  indexing.py:1612(convert_to_index_sliceable)
                                                                               21    0.000    0.000  {isinstance}
internals.py:3809(_consolidate)                                        ->      48    0.000    0.000  internals.py:3815(<lambda>)
                                                                               36    0.001    0.003  internals.py:3830(_merge_blocks)
                                                                               36    0.000    0.000  {isinstance}
                                                                               36    0.000    0.000  {method 'append' of 'list' objects}
                                                                               12    0.000    0.000  {sorted}
index.py:595(nlevels)                                                  ->
frame.py:2213(insert)                                                  ->       7    0.000    0.000  frame.py:2164(_ensure_valid_index)
                                                                                7    0.000    0.001  frame.py:2315(_sanitize_column)
                                                                                7    0.000    0.002  internals.py:3060(insert)
series.py:2139(_needs_reindex_multi)                                   ->
internals.py:220(shape)                                                ->
strings.py:783(<lambda>)                                               ->
internals.py:3830(_merge_blocks)                                       ->      12    0.000    0.000  fromnumeric.py:803(argsort)
                                                                               24    0.000    0.000  internals.py:119(mgr_locs)
                                                                               12    0.000    0.000  internals.py:2073(make_block)
                                                                               12    0.000    0.001  internals.py:3866(_vstack)
                                                                               36    0.000    0.000  {len}
                                                                               12    0.000    0.000  {numpy.core.multiarray.concatenate}
frame.py:189(_constructor)                                             ->
frame.py:2192(_set_item)                                               ->      10    0.000    0.000  frame.py:2164(_ensure_valid_index)
                                                                               10    0.000    0.001  frame.py:2315(_sanitize_column)
                                                                               10    0.000    0.002  generic.py:1195(_set_item)
                                                                               10    0.000    0.000  generic.py:1227(_check_setitem_copy)
                                                                               10    0.000    0.000  {len}
frame.py:1816(_getitem_array)                                          ->       3    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                2    0.000    0.000  generic.py:1046(_indexer)
                                                                                3    0.000    0.002  generic.py:1339(take)
                                                                                1    0.000    0.000  index.py:3434(equals)
                                                                                2    0.000    0.000  indexing.py:1007(_convert_to_indexer)
                                                                                1    0.000    0.000  indexing.py:1648(check_bool_indexer)
                                                                                1    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'nonzero' of 'numpy.ndarray' objects}
internals.py:3493(is_consolidated)                                     ->
internals.py:3060(insert)                                              ->      14    0.000    0.000  function_base.py:3625(insert)
                                                                                2    0.000    0.000  function_base.py:3832(append)
                                                                                8    0.000    0.000  index.py:1045(__contains__)
                                                                                8    0.000    0.001  index.py:2531(insert)
                                                                               38    0.000    0.000  internals.py:119(mgr_locs)
                                                                               19    0.000    0.000  internals.py:141(mgr_locs)
                                                                                8    0.000    0.000  internals.py:2073(make_block)
                                                                                8    0.000    0.000  internals.py:2208(ndim)
                                                                               16    0.000    0.000  internals.py:2279(_get_items)
                                                                                8    0.000    0.001  internals.py:4450(_fast_count_smallints)
                                                                                8    0.000    0.000  {isinstance}
                                                                               35    0.000    0.000  {len}
                                                                               19    0.000    0.000  {method 'add' of 'pandas.lib.BlockPlacement' objects}
filters.py:110(correlate1d)                                            ->       6    0.000    0.000  _ni_support.py:38(_extend_mode_to_code)
                                                                                6    0.000    0.000  _ni_support.py:70(_get_output)
                                                                                6    0.000    0.000  _ni_support.py:90(_check_axis)
                                                                               12    0.000    0.000  numeric.py:394(asarray)
                                                                                6    0.000    0.000  type_check.py:237(iscomplexobj)
                                                                               18    0.000    0.000  {len}
                                                                                6    0.002    0.002  {scipy.ndimage._nd_image.correlate1d}
indexing.py:1753(need_slice)                                           ->
generic.py:1339(take)                                                  ->       3    0.000    0.000  frame.py:189(_constructor)
                                                                                3    0.000    0.000  frame.py:200(__init__)
                                                                                6    0.000    0.000  generic.py:318(_get_axis)
                                                                                3    0.000    0.000  generic.py:322(_get_block_manager_axis)
                                                                                2    0.000    0.000  generic.py:1199(_set_is_copy)
                                                                                3    0.000    0.000  generic.py:2118(__finalize__)
                                                                                3    0.000    0.000  generic.py:2197(_consolidate_inplace)
                                                                                2    0.000    0.000  index.py:1233(equals)
                                                                                1    0.000    0.000  index.py:3434(equals)
                                                                                3    0.000    0.002  internals.py:3255(take)
utils.py:448(RandEmat)                                                 ->       1    0.001    0.002  utils.py:426(fix_matrix_gauge)
                                                                                1    0.000    0.000  {method 'randn' of 'mtrand.RandomState' objects}
utils.py:426(fix_matrix_gauge)                                         ->       1    0.000    0.000  fromnumeric.py:1631(sum)
                                                                               87    0.000    0.001  fromnumeric.py:2651(mean)
                                                                                1    0.000    0.000  fromnumeric.py:2838(var)
                                                                                2    0.000    0.000  scimath.py:176(sqrt)
                                                                                1    0.000    0.000  {range}
{scipy.ndimage._nd_image.correlate1d}                                  ->
internals.py:3499(_consolidate_inplace)                                ->
ops.py:498(<lambda>)                                                   ->
frame.py:2315(_sanitize_column)                                        ->       2    0.000    0.000  common.py:2049(_possibly_infer_to_datetimelike)
                                                                               14    0.000    0.000  common.py:2585(is_object_dtype)
                                                                               14    0.000    0.000  common.py:2644(is_sequence)
                                                                                3    0.000    0.000  frame.py:2319(reindexer)
                                                                               17    0.000    0.000  index.py:1045(__contains__)
                                                                               17    0.000    0.000  numeric.py:394(asarray)
                                                                               14    0.000    0.000  series.py:2575(_sanitize_index)
                                                                               17    0.000    0.000  shape_base.py:60(atleast_2d)
                                                                               99    0.000    0.000  {isinstance}
                                                                               14    0.001    0.001  {method 'copy' of 'numpy.ndarray' objects}
                                                                                2    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                2    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
numeric.py:141(ones)                                                   ->     437    0.001    0.001  {numpy.core.multiarray.copyto}
                                                                              437    0.001    0.001  {numpy.core.multiarray.empty}
{pandas.algos.take_2d_axis1_int64_int64}                               ->
internals.py:115(fill_value)                                           ->
{method 'upper' of 'str' objects}                                      ->
indexing.py:113(__setitem__)                                           ->       1    0.000    0.000  indexing.py:94(_get_setitem_indexer)
                                                                                1    0.000    0.001  indexing.py:199(_setitem_with_indexer)
{pandas.lib.is_bool}                                                   ->
generic.py:1195(_set_item)                                             ->      10    0.000    0.000  generic.py:1172(_clear_item_cache)
                                                                               10    0.000    0.001  internals.py:2943(set)
{method 'itervalues' of 'dict' objects}                                ->
{method 'take' of 'numpy.ndarray' objects}                             ->
internals.py:2943(set)                                                 ->      10    0.000    0.000  common.py:2565(is_categorical)
                                                                               10    0.000    0.000  index.py:1553(get_loc)
                                                                                8    0.000    0.000  internals.py:262(set)
                                                                                5    0.000    0.000  internals.py:1258(should_store)
                                                                                3    0.000    0.000  internals.py:1304(should_store)
                                                                                1    0.000    0.000  internals.py:1495(set)
                                                                                1    0.000    0.000  internals.py:1542(should_store)
                                                                               10    0.000    0.000  internals.py:2204(shape)
                                                                               10    0.000    0.000  internals.py:2208(ndim)
                                                                               11    0.000    0.000  internals.py:2279(_get_items)
                                                                                9    0.000    0.000  internals.py:2973(value_getitem)
                                                                                1    0.000    0.000  internals.py:3060(insert)
                                                                               18    0.000    0.000  internals.py:3935(_get_blkno_placements)
                                                                               19    0.000    0.000  {isinstance}
                                                                               19    0.000    0.000  {len}
                                                                                9    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
nanops.py:130(_get_fill_value)                                         ->
merge.py:700(concat)                                                   ->       1    0.000    0.001  merge.py:763(__init__)
                                                                                1    0.000    0.001  merge.py:888(get_result)
indexing.py:199(_setitem_with_indexer)                                 ->       2    0.000    0.000  frame.py:414(axes)
                                                                                1    0.000    0.000  frame.py:1774(__getitem__)
                                                                                1    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  generic.py:2225(_is_mixed_type)
                                                                                3    0.000    0.000  index.py:1059(__getitem__)
                                                                                1    0.000    0.000  indexing.py:170(_has_valid_setitem_indexer)
                                                                                1    0.000    0.001  indexing.py:397(setter)
                                                                                1    0.000    0.000  indexing.py:417(can_do_equal_len)
                                                                                1    0.000    0.000  indexing.py:510(_align_series)
                                                                                1    0.000    0.000  indexing.py:1584(length_of_indexer)
                                                                                1    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                1    0.000    0.000  series.py:474(axes)
                                                                                1    0.000    0.000  {any}
                                                                                1    0.000    0.000  {getattr}
                                                                               10    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.array}
                                                                                1    0.000    0.000  {pandas.lib.is_integer}
{range}                                                                ->
internals.py:479(_try_coerce_and_cast_result)                          ->       1    0.000    0.001  internals.py:435(_try_cast_result)
                                                                                1    0.000    0.000  internals.py:475(_try_coerce_result)
internals.py:435(_try_cast_result)                                     ->       1    0.000    0.001  common.py:1285(_possibly_downcast_to_dtype)
                                                                                1    0.000    0.000  internals.py:228(dtype)
common.py:1285(_possibly_downcast_to_dtype)                            ->       1    0.000    0.000  common.py:368(notnull)
                                                                                2    0.000    0.000  common.py:1293(<lambda>)
                                                                                1    0.000    0.000  fromnumeric.py:2259(prod)
                                                                                1    0.000    0.000  numeric.py:1910(isscalar)
                                                                                2    0.001    0.001  numeric.py:2156(allclose)
                                                                                3    0.000    0.000  {isinstance}
                                                                                3    0.000    0.000  {issubclass}
                                                                                1    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
                                                                                2    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.array}
fromnumeric.py:2651(mean)                                              ->      88    0.000    0.001  _methods.py:53(_mean)
_methods.py:53(_mean)                                                  ->      88    0.000    0.000  _methods.py:43(_count_reduce_items)
                                                                               88    0.000    0.000  numeric.py:464(asanyarray)
                                                                               87    0.000    0.000  {hasattr}
                                                                               88    0.000    0.000  {isinstance}
                                                                               88    0.000    0.000  {issubclass}
                                                                               88    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
fromnumeric.py:1925(cumsum)                                            ->       6    0.000    0.001  generic.py:4393(func)
generic.py:4393(func)                                                  ->       6    0.000    0.000  generic.py:225(_construct_axes_dict)
                                                                                6    0.000    0.000  generic.py:2118(__finalize__)
                                                                                6    0.000    0.000  generic.py:4429(<lambda>)
                                                                                6    0.000    0.000  series.py:119(__init__)
                                                                                6    0.000    0.000  series.py:237(_constructor)
                                                                               12    0.000    0.000  {issubclass}
                                                                                6    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                                6    0.000    0.000  {pandas.lib.values_from_object}
generic.py:1566(drop)                                                  ->       1    0.000    0.000  frame.py:414(axes)
                                                                                1    0.000    0.001  frame.py:2508(reindex)
                                                                                2    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                2    0.000    0.000  generic.py:305(_get_axis_name)
                                                                                2    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  index.py:599(_get_names)
                                                                                1    0.000    0.000  index.py:610(set_names)
                                                                                1    0.000    0.000  index.py:740(is_unique)
                                                                                2    0.000    0.001  index.py:2551(drop)
{numpy.core.multiarray.concatenate}                                    ->
internals.py:3866(_vstack)                                             ->      12    0.000    0.001  shape_base.py:179(vstack)
groupby.py:1566(_aggregate)                                            ->       1    0.000    0.000  groupby.py:1363(group_info)
                                                                                1    0.001    0.001  {pandas.algos.group_add_float64}
shape_base.py:179(vstack)                                              ->      24    0.000    0.000  shape_base.py:60(atleast_2d)
                                                                               12    0.001    0.001  {numpy.core.multiarray.concatenate}
index.py:2531(insert)                                                  ->      16    0.000    0.001  index.py:109(__new__)
                                                                                2    0.000    0.000  index.py:258(dtype)
                                                                                8    0.000    0.000  index.py:263(values)
                                                                                8    0.000    0.000  numeric.py:394(asarray)
                                                                                8    0.000    0.000  {numpy.core.multiarray.concatenate}
{numpy.core.multiarray.copyto}                                         ->
numeric.py:2156(allclose)                                              ->       4    0.000    0.000  fromnumeric.py:1772(any)
                                                                                2    0.000    0.000  fromnumeric.py:1852(all)
                                                                                2    0.000    0.000  numeric.py:2809(__init__)
                                                                                2    0.000    0.000  numeric.py:2813(__enter__)
                                                                                2    0.000    0.000  numeric.py:2818(__exit__)
                                                                                4    0.000    0.000  {abs}
                                                                                6    0.000    0.000  {numpy.core.multiarray.array}
                                                                                2    0.000    0.000  {numpy.core.multiarray.result_type}
{pandas.algos.group_add_float64}                                       ->       2    0.000    0.000  numeric.py:81(zeros_like)
index.py:1148(take)                                                    ->      10    0.000    0.000  index.py:343(_shallow_copy)
                                                                               10    0.000    0.000  {method 'take' of 'numpy.ndarray' objects}
                                                                               10    0.000    0.000  {numpy.core.multiarray.array}
                                                                               10    0.000    0.000  {pandas.algos.ensure_platform_int}
merge.py:763(__init__)                                                 ->       3    0.000    0.000  base.py:318(ndim)
                                                                                1    0.000    0.000  frame.py:189(_constructor)
                                                                                1    0.000    0.001  frame.py:200(__init__)
                                                                                1    0.000    0.000  frame.py:418(shape)
                                                                                1    0.000    0.000  fromnumeric.py:1631(sum)
                                                                                5    0.000    0.000  generic.py:386(ndim)
                                                                                2    0.000    0.000  generic.py:2203(consolidate)
                                                                                1    0.000    0.000  merge.py:938(_get_new_axes)
                                                                                1    0.000    0.000  {getattr}
                                                                                6    0.000    0.000  {isinstance}
                                                                                3    0.000    0.000  {len}
                                                                                1    0.000    0.000  {max}
                                                                                2    0.000    0.000  {method 'add' of 'set' objects}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
internals.py:2844(get)                                                 ->      20    0.000    0.000  common.py:212(isnull)
                                                                               20    0.000    0.000  index.py:1553(get_loc)
                                                                               40    0.000    0.000  internals.py:2279(_get_items)
                                                                               20    0.000    0.001  internals.py:2872(iget)
groupby.py:3214(_get_data_to_aggregate)                                ->       1    0.000    0.000  groupby.py:511(__getattr__)
                                                                                1    0.000    0.001  groupby.py:2624(_obj_with_exclusions)
groupby.py:2624(_obj_with_exclusions)                                  ->       1    0.000    0.001  generic.py:1566(drop)
                                                                                1    0.000    0.000  {len}
frame.py:2102(_box_item_values)                                        ->      20    0.000    0.000  frame.py:2109(_box_col_values)
                                                                               20    0.000    0.000  index.py:1059(__getitem__)
                                                                               20    0.000    0.000  index.py:1553(get_loc)
ops.py:574(wrapper)                                                    ->       1    0.000    0.000  common.py:212(isnull)
                                                                                1    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                1    0.000    0.000  generic.py:4294(logical_func)
                                                                                1    0.000    0.000  numeric.py:1910(isscalar)
                                                                                1    0.000    0.000  ops.py:543(na_op)
                                                                                1    0.000    0.000  series.py:119(__init__)
                                                                                1    0.000    0.000  series.py:319(get_values)
                                                                                4    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {issubclass}
                                                                                1    0.000    0.000  {pandas.index.convert_scalar}
                                                                                2    0.000    0.000  {pandas.lib.values_from_object}
fromnumeric.py:1631(sum)                                               ->      34    0.000    0.001  _methods.py:31(_sum)
                                                                               34    0.000    0.000  {isinstance}
{pandas.lib.isnullobj}                                                 ->
indexing.py:397(setter)                                                ->       1    0.000    0.000  frame.py:1774(__getitem__)
                                                                                1    0.000    0.001  frame.py:2114(__setitem__)
                                                                                1    0.000    0.000  {all}
                                                                                1    0.000    0.000  {isinstance}
internals.py:2872(iget)                                                ->      20    0.000    0.000  internals.py:128(make_block_same_class)
                                                                               20    0.000    0.000  internals.py:259(iget)
                                                                               20    0.000    0.000  internals.py:3343(__init__)
                                                                               20    0.000    0.000  {len}
index.py:2551(drop)                                                    ->       2    0.000    0.000  common.py:2380(_index_labels_to_array)
                                                                                2    0.000    0.000  index.py:1643(get_indexer)
                                                                                1    0.000    0.000  index.py:2521(delete)
                                                                                1    0.000    0.000  numeric.py:1681(array_str)
                                                                                2    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
frame.py:2508(reindex)                                                 ->       1    0.000    0.001  generic.py:1739(reindex)
fromnumeric.py:963(searchsorted)                                       ->       6    0.001    0.001  {method 'searchsorted' of 'numpy.ndarray' objects}
{method 'searchsorted' of 'numpy.ndarray' objects}                     ->
merge.py:888(get_result)                                               ->       1    0.000    0.000  generic.py:280(_from_axes)
                                                                                1    0.000    0.000  generic.py:2118(__finalize__)
                                                                                2    0.000    0.000  index.py:3434(equals)
                                                                                1    0.000    0.000  internals.py:4044(concatenate_block_managers)
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
indexing.py:1007(_convert_to_indexer)                                  ->       2    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                2    0.000    0.000  common.py:2347(_asarray_tuplesafe)
                                                                                4    0.000    0.000  generic.py:318(_get_axis)
                                                                                4    0.000    0.000  index.py:752(is_integer)
                                                                                2    0.000    0.000  index.py:914(_convert_list_indexer)
                                                                                4    0.000    0.000  index.py:1553(get_loc)
                                                                                2    0.000    0.000  index.py:1643(get_indexer)
                                                                                4    0.000    0.000  indexing.py:159(_convert_scalar_indexer)
                                                                                1    0.000    0.000  indexing.py:165(_convert_slice_indexer)
                                                                                2    0.000    0.000  indexing.py:1731(is_nested_tuple)
                                                                                2    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                7    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
                                                                                4    0.000    0.000  {pandas.lib.is_integer}
                                                                                2    0.000    0.000  {pandas.lib.values_from_object}
frame.py:295(_init_dict)                                               ->       1    0.000    0.000  common.py:2185(_try_sort)
                                                                                1    0.000    0.000  frame.py:4791(_arrays_to_mgr)
                                                                                1    0.000    0.000  index.py:109(__new__)
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'keys' of 'dict' objects}
{pandas.algos.take_2d_axis1_float64_float64}                           ->
internals.py:4450(_fast_count_smallints)                               ->       7    0.000    0.000  index_tricks.py:251(__getitem__)
                                                                                8    0.000    0.000  {len}
                                                                                7    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                                7    0.000    0.000  {method 'nonzero' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                7    0.000    0.000  {numpy.lib._compiled_base.bincount}
generic.py:412(_set_axis)                                              ->      10    0.000    0.000  generic.py:1172(_clear_item_cache)
                                                                               10    0.000    0.000  internals.py:2212(set_axis)
frame.py:2133(_setitem_array)                                          ->       1    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                2    0.000    0.000  frame.py:1774(__getitem__)
                                                                                2    0.000    0.000  frame.py:2114(__setitem__)
                                                                                1    0.000    0.000  index.py:1001(__iter__)
                                                                                1    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
frame.py:2459(_reindex_axes)                                           ->       1    0.000    0.000  frame.py:2482(_reindex_columns)
frame.py:2482(_reindex_columns)                                        ->       1    0.000    0.000  generic.py:1854(_reindex_with_indexers)
                                                                                1    0.000    0.000  index.py:1862(reindex)
generic.py:4429(<lambda>)                                              ->       6    0.000    0.000  {method 'cumsum' of 'numpy.ndarray' objects}
{method 'cumsum' of 'numpy.ndarray' objects}                           ->
internals.py:2396(apply)                                               ->       1    0.000    0.000  internals.py:371(astype)
                                                                                1    0.000    0.000  internals.py:422(convert)
                                                                                1    0.000    0.000  internals.py:504(copy)
                                                                                3    0.000    0.000  internals.py:2163(__init__)
                                                                                3    0.000    0.000  internals.py:2442(<genexpr>)
                                                                                3    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                3    0.000    0.000  {getattr}
                                                                                3    0.000    0.000  {isinstance}
                                                                                3    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {method 'extend' of 'list' objects}
internals.py:2212(set_axis)                                            ->      10    0.000    0.000  index.py:5677(_ensure_index)
                                                                               20    0.000    0.000  {len}
internals.py:4044(concatenate_block_managers)                          ->       2    0.000    0.000  internals.py:2073(make_block)
                                                                                1    0.000    0.000  internals.py:2163(__init__)
                                                                                2    0.000    0.000  internals.py:4144(concatenate_join_units)
                                                                                2    0.000    0.000  internals.py:4168(get_mgr_concatenation_plan)
                                                                                3    0.000    0.000  internals.py:4246(combine_concat_plans)
frame.py:4791(_arrays_to_mgr)                                          ->       1    0.000    0.000  frame.py:4811(extract_index)
                                                                                1    0.000    0.000  frame.py:5092(_homogenize)
                                                                                2    0.000    0.000  index.py:5677(_ensure_index)
                                                                                1    0.000    0.000  internals.py:3553(create_block_manager_from_arrays)
frame.py:2109(_box_col_values)                                         ->      20    0.000    0.000  series.py:227(from_array)
index_tricks.py:251(__getitem__)                                       ->       7    0.000    0.000  index_tricks.py:231(_retval)
                                                                                7    0.000    0.000  numerictypes.py:970(find_common_type)
                                                                               56    0.000    0.000  {isinstance}
                                                                                7    0.000    0.000  {len}
                                                                               28    0.000    0.000  {method 'append' of 'list' objects}
                                                                               14    0.000    0.000  {method 'transpose' of 'numpy.ndarray' objects}
                                                                               28    0.000    0.000  {numpy.core.multiarray.array}
                                                                                7    0.000    0.000  {numpy.core.multiarray.concatenate}
                                                                               21    0.000    0.000  {range}
indexing.py:510(_align_series)                                         ->       2    0.000    0.000  common.py:2607(is_null_slice)
                                                                                1    0.000    0.000  common.py:2644(is_sequence)
                                                                                1    0.000    0.000  frame.py:414(axes)
                                                                                2    0.000    0.000  generic.py:386(ndim)
                                                                                1    0.000    0.000  index.py:109(__new__)
                                                                                1    0.000    0.000  index.py:1059(__getitem__)
                                                                                1    0.000    0.000  index.py:3434(equals)
                                                                                1    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                1    0.000    0.000  series.py:308(values)
                                                                                3    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {map}
                                                                                1    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {sum}
internals.py:3553(create_block_manager_from_arrays)                    ->       1    0.000    0.000  internals.py:2163(__init__)
                                                                                1    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                1    0.000    0.000  internals.py:3563(form_blocks)
numeric.py:81(zeros_like)                                              ->       7    0.000    0.000  {numpy.core.multiarray.copyto}
                                                                                7    0.000    0.000  {numpy.core.multiarray.empty_like}
                                                                                7    0.000    0.000  {numpy.core.multiarray.zeros}
series.py:227(from_array)                                              ->      20    0.000    0.000  series.py:119(__init__)
                                                                               20    0.000    0.000  {isinstance}
{method 'put' of 'numpy.ndarray' objects}                              ->
generic.py:4294(logical_func)                                          ->       1    0.000    0.000  series.py:2068(_reduce)
series.py:2068(_reduce)                                                ->       1    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                1    0.000    0.000  nanops.py:233(nanany)
                                                                                1    0.000    0.000  series.py:308(values)
                                                                                1    0.000    0.000  {isinstance}
function_base.py:3625(insert)                                          ->      14    0.000    0.000  numeric.py:394(asarray)
                                                                               14    0.000    0.000  numeric.py:1347(rollaxis)
                                                                               14    0.000    0.000  {isinstance}
                                                                               14    0.000    0.000  {method 'item' of 'numpy.ndarray' objects}
                                                                               28    0.000    0.000  {numpy.core.multiarray.array}
                                                                               14    0.000    0.000  {numpy.core.multiarray.empty}
frame.py:343(_init_ndarray)                                            ->       2    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                1    0.000    0.000  common.py:2585(is_object_dtype)
                                                                                1    0.000    0.000  frame.py:361(_get_axes)
                                                                                1    0.000    0.000  frame.py:4863(_prep_ndarray)
                                                                                1    0.000    0.000  internals.py:3530(create_block_manager_from_blocks)
                                                                                1    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {isinstance}
nanops.py:233(nanany)                                                  ->       1    0.000    0.000  nanops.py:153(_get_values)
                                                                                1    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
groupby.py:3251(_wrap_agged_blocks)                                    ->       1    0.000    0.000  frame.py:200(__init__)
                                                                                1    0.000    0.000  generic.py:2430(convert_objects)
                                                                                1    0.000    0.000  groupby.py:3269(_reindex_output)
                                                                                1    0.000    0.000  internals.py:2163(__init__)
Container.py:505(__init__)                                             ->       7    0.000    0.000  Container.py:168(file_items)
                                                                                7    0.000    0.000  Node.py:399(__init__)
                                                                                7    0.000    0.000  copy.py:66(copy)
                                                                                7    0.000    0.000  six.py:560(iteritems)
                                                                                7    0.000    0.000  {isinstance}
                                                                               14    0.000    0.000  {len}
                                                                               28    0.000    0.000  {method 'append' of 'list' objects}
                                                                               21    0.000    0.000  {numpy.core.multiarray.array}
progressbar.py:29(update)                                              ->       5    0.000    0.000  progressbar.py:50(animate)
                                                                                6    0.000    0.000  {time.time}
scimath.py:176(sqrt)                                                   ->      12    0.000    0.000  scimath.py:97(_fix_real_lt_zero)
shape_base.py:60(atleast_2d)                                           ->      41    0.000    0.000  numeric.py:464(asanyarray)
                                                                              123    0.000    0.000  {len}
                                                                               41    0.000    0.000  {method 'append' of 'list' objects}
internals.py:3563(form_blocks)                                         ->       1    0.000    0.000  index.py:109(__new__)
                                                                                1    0.000    0.000  index.py:1059(__getitem__)
                                                                                1    0.000    0.000  index.py:1233(equals)
                                                                                1    0.000    0.000  internals.py:3687(_multi_blockify)
                                                                                5    0.000    0.000  series.py:288(dtype)
                                                                                1    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {issubclass}
                                                                               10    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {method 'extend' of 'list' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.arange}
defmatrix.py:244(__new__)                                              ->       8    0.000    0.000  {isinstance}
                                                                                3    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                                3    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
progressbar.py:50(animate)                                             ->       5    0.000    0.000  progressbar.py:53(progbar)
                                                                                5    0.000    0.000  progressbar.py:73(consoleprint)
internals.py:262(set)                                                  ->
index.py:3434(equals)                                                  ->       4    0.000    0.000  common.py:407(array_equivalent)
                                                                               11    0.000    0.000  index.py:218(is_)
                                                                                8    0.000    0.000  {pandas.lib.values_from_object}
internals.py:504(copy)                                                 ->       4    0.000    0.000  internals.py:119(mgr_locs)
                                                                                4    0.000    0.000  internals.py:2073(make_block)
                                                                                3    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
generic.py:3108(groupby)                                               ->       1    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                1    0.000    0.000  groupby.py:1190(groupby)
merge.py:938(_get_new_axes)                                            ->       1    0.000    0.000  merge.py:932(_get_result_dim)
                                                                                1    0.000    0.000  merge.py:962(_get_comb_axis)
                                                                                1    0.000    0.000  merge.py:974(_get_concat_axis)
_methods.py:43(_count_reduce_items)                                    ->      89    0.000    0.000  {isinstance}
                                                                               87    0.000    0.000  {range}
{abs}                                                                  ->
groupby.py:1190(groupby)                                               ->       1    0.000    0.000  groupby.py:364(__init__)
                                                                                2    0.000    0.000  {isinstance}
groupby.py:364(__init__)                                               ->       1    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                1    0.000    0.000  generic.py:2197(_consolidate_inplace)
                                                                                1    0.000    0.000  groupby.py:2043(_get_grouper)
                                                                                1    0.000    0.000  {isinstance}
generic.py:2430(convert_objects)                                       ->       1    0.000    0.000  frame.py:189(_constructor)
                                                                                1    0.000    0.000  frame.py:200(__init__)
                                                                                1    0.000    0.000  generic.py:2118(__finalize__)
                                                                                1    0.000    0.000  internals.py:2506(convert)
indexing.py:1612(convert_to_index_sliceable)                           ->      10    0.000    0.000  index.py:1045(__contains__)
                                                                                1    0.000    0.000  index.py:3427(is_all_dates)
                                                                               10    0.000    0.000  internals.py:2279(_get_items)
                                                                               28    0.000    0.000  {isinstance}
MCMC.py:60(__init__)                                                   ->       1    0.000    0.000  Model.py:176(__init__)
Model.py:176(__init__)                                                 ->       1    0.000    0.000  Model.py:81(__init__)
                                                                                1    0.000    0.000  Model.py:514(fset)
                                                                                1    0.000    0.000  Model.py:522(_assign_database_backend)
                                                                                1    0.000    0.000  {hasattr}
internals.py:2506(convert)                                             ->       1    0.000    0.000  internals.py:2396(apply)
internals.py:3530(create_block_manager_from_blocks)                    ->       1    0.000    0.000  internals.py:2073(make_block)
                                                                                1    0.000    0.000  internals.py:2163(__init__)
                                                                                1    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                1    0.000    0.000  {isinstance}
                                                                                3    0.000    0.000  {len}
groupby.py:2043(_get_grouper)                                          ->       1    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                1    0.000    0.000  frame.py:1774(__getitem__)
                                                                                1    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  groupby.py:1225(__init__)
                                                                                1    0.000    0.000  groupby.py:1874(__init__)
                                                                                1    0.000    0.000  groupby.py:2125(is_in_axis)
                                                                                1    0.000    0.000  groupby.py:2135(is_in_obj)
                                                                                1    0.000    0.000  {all}
                                                                                2    0.000    0.000  {any}
                                                                                5    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
generic.py:2414(copy)                                                  ->       1    0.000    0.000  frame.py:189(_constructor)
                                                                                1    0.000    0.000  frame.py:200(__init__)
                                                                                1    0.000    0.000  generic.py:2118(__finalize__)
                                                                                1    0.000    0.000  internals.py:2674(copy)
internals.py:2616(get_numeric_data)                                    ->       1    0.000    0.000  internals.py:2626(combine)
                                                                                1    0.000    0.000  internals.py:2837(_consolidate_inplace)
index.py:3385(__new__)                                                 ->      13    0.000    0.000  index.py:204(_simple_new)
                                                                               13    0.000    0.000  index.py:312(_coerce_to_ndarray)
                                                                               26    0.000    0.000  {issubclass}
                                                                               13    0.000    0.000  {numpy.core.multiarray.array}
generic.py:1093(_set_as_cached)                                        ->      20    0.000    0.000  generic.py:2152(__setattr__)
indexing.py:94(_get_setitem_indexer)                                   ->       1    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  indexing.py:144(_convert_tuple)
                                                                                2    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
internals.py:2626(combine)                                             ->       1    0.000    0.000  common.py:756(take_nd)
                                                                                1    0.000    0.000  fromnumeric.py:694(sort)
                                                                                1    0.000    0.000  index.py:1148(take)
                                                                                2    0.000    0.000  internals.py:119(mgr_locs)
                                                                                1    0.000    0.000  internals.py:141(mgr_locs)
                                                                                1    0.000    0.000  internals.py:504(copy)
                                                                                1    0.000    0.000  internals.py:2163(__init__)
                                                                                1    0.000    0.000  internals.py:2204(shape)
                                                                                1    0.000    0.000  internals.py:2279(_get_items)
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.concatenate}
                                                                                1    0.000    0.000  {pandas.lib.get_reverse_indexer}
internals.py:4144(concatenate_join_units)                              ->       2    0.000    0.000  internals.py:4068(get_empty_dtype_and_na)
                                                                                2    0.000    0.000  internals.py:4396(get_reindexed_values)
                                                                                4    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
internals.py:2674(copy)                                                ->       1    0.000    0.000  internals.py:2396(apply)
                                                                                2    0.000    0.000  internals.py:2694(<lambda>)
indexing.py:144(_convert_tuple)                                        ->       2    0.000    0.000  indexing.py:1007(_convert_to_indexer)
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
groupby.py:480(_set_selection_from_grouper)                            ->       1    0.000    0.000  generic.py:366(_info_axis)
                                                                                1    0.000    0.000  generic.py:386(ndim)
                                                                                1    0.000    0.000  index.py:109(__new__)
                                                                                1    0.000    0.000  index.py:273(tolist)
                                                                                1    0.000    0.000  index.py:1481(difference)
                                                                                1    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {len}
InstantiationDecorators.py:46(_extract)                                ->       3    0.000    0.000  InstantiationDecorators.py:32(disable_special_methods)
                                                                                3    0.000    0.000  InstantiationDecorators.py:36(enable_special_methods)
                                                                                3    0.000    0.000  InstantiationDecorators.py:40(check_special_methods)
                                                                                3    0.000    0.000  inspect.py:804(getargspec)
                                                                                1    0.000    0.000  learn_matrix.py:67(sequences)
                                                                                1    0.000    0.000  learn_matrix.py:70(pymcdf)
                                                                                1    0.000    0.000  learn_matrix.py:73(emat)
                                                                                9    0.000    0.000  {len}
                                                                                3    0.000    0.000  {method 'pop' of 'dict' objects}
                                                                                3    0.000    0.000  {method 'update' of 'dict' objects}
                                                                                3    0.000    0.000  {sys.settrace}
                                                                                3    0.000    0.000  {zip}
function_base.py:550(asarray_chkfinite)                                ->       1    0.000    0.000  numeric.py:394(asarray)
                                                                                1    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
numeric.py:1681(array_str)                                             ->       1    0.000    0.000  arrayprint.py:343(array2string)
arrayprint.py:343(array2string)                                        ->       1    0.000    0.000  arrayprint.py:233(_array2string)
                                                                                1    0.000    0.000  {_functools.reduce}
Model.py:81(__init__)                                                  ->       1    0.000    0.000  Container.py:594(__init__)
Container.py:594(__init__)                                             ->       1    0.000    0.000  Container.py:168(file_items)
                                                                                1    0.000    0.000  Container.py:505(__init__)
                                                                                1    0.000    0.000  Node.py:399(__init__)
                                                                                2    0.000    0.000  copy.py:66(copy)
                                                                                1    0.000    0.000  {hasattr}
                                                                                1    0.000    0.000  {isinstance}
numeric.py:2328(array_equal)                                           ->      12    0.000    0.000  numeric.py:394(asarray)
                                                                                4    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
{math.exp}                                                             ->
internals.py:3815(<lambda>)                                            ->      96    0.000    0.000  internals.py:79(_consolidate_key)
PyMCObjects.py:108(__init__)                                           ->       3    0.000    0.000  Container.py:505(__init__)
                                                                                3    0.000    0.000  PyMCObjects.py:63(extend_parents)
                                                                                3    0.000    0.000  {isinstance}
arrayprint.py:233(_array2string)                                       ->       1    0.000    0.000  arrayprint.py:465(_formatArray)
                                                                                1    0.000    0.000  arrayprint.py:533(__init__)
                                                                                1    0.000    0.000  arrayprint.py:639(__init__)
                                                                                1    0.000    0.000  arrayprint.py:661(__init__)
                                                                                1    0.000    0.000  arrayprint.py:689(__init__)
                                                                                1    0.000    0.000  arrayprint.py:700(__init__)
                                                                                1    0.000    0.000  arrayprint.py:716(__init__)
                                                                                1    0.000    0.000  arrayprint.py:744(__init__)
                                                                                1    0.000    0.000  fromnumeric.py:1291(ravel)
                                                                                6    0.000    0.000  {issubclass}
                                                                                2    0.000    0.000  {len}
internals.py:1495(set)                                                 ->
internals.py:4068(get_empty_dtype_and_na)                              ->       2    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                2    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                                2    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                2    0.000    0.000  internals.py:4357(dtype)
                                                                                2    0.000    0.000  internals.py:4370(is_null)
                                                                                4    0.000    0.000  {issubclass}
                                                                                4    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'add' of 'set' objects}
generic.py:2394(astype)                                                ->       1    0.000    0.000  frame.py:189(_constructor)
                                                                                1    0.000    0.000  frame.py:200(__init__)
                                                                                1    0.000    0.000  generic.py:2118(__finalize__)
                                                                                1    0.000    0.000  internals.py:2503(astype)
Container.py:168(file_items)                                           ->      20    0.000    0.000  PyMCObjects.py:1046(_get_observed)
                                                                               14    0.000    0.000  {getattr}
                                                                               30    0.000    0.000  {isinstance}
                                                                               20    0.000    0.000  {method 'add' of 'set' objects}
                                                                               24    0.000    0.000  {setattr}
indexing.py:1695(maybe_convert_indices)                                ->       3    0.000    0.000  {isinstance}
                                                                                6    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
{method 'standard_normal' of 'mtrand.RandomState' objects}             ->
progressbar.py:73(consoleprint)                                        ->       5    0.000    0.000  {method 'lower' of 'str' objects}
                                                                                5    0.000    0.000  {method 'startswith' of 'str' objects}
                                                                                5    0.000    0.000  {print}
internals.py:2503(astype)                                              ->       1    0.000    0.000  internals.py:2396(apply)
merge.py:974(_get_concat_axis)                                         ->       1    0.000    0.000  merge.py:1020(_maybe_check_integrity)
                                                                                1    0.000    0.000  merge.py:1028(_concat_indexes)
common.py:2144(_default_index)                                         ->       3    0.000    0.000  index.py:3385(__new__)
                                                                                3    0.000    0.000  {numpy.core.multiarray.arange}
progressbar.py:53(progbar)                                             ->       5    0.000    0.000  progressbar.py:26(percentage)
                                                                                5    0.000    0.000  progressbar.py:58(bar)
                                                                                5    0.000    0.000  {round}
strings.py:1077(_wrap_result)                                          ->       1    0.000    0.000  series.py:119(__init__)
                                                                                1    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {hasattr}
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'get' of 'dict' objects}
internals.py:422(convert)                                              ->       1    0.000    0.000  internals.py:504(copy)
merge.py:1028(_concat_indexes)                                         ->       1    0.000    0.000  index.py:1121(append)
index.py:2521(delete)                                                  ->       1    0.000    0.000  function_base.py:3427(delete)
                                                                                1    0.000    0.000  index.py:109(__new__)
numerictypes.py:970(find_common_type)                                  ->      16    0.000    0.000  numerictypes.py:949(_can_coerce_all)
copy.py:66(copy)                                                       ->      12    0.000    0.000  copy.py:113(_copy_with_constructor)
                                                                                2    0.000    0.000  copy.py:306(_reconstruct)
                                                                                4    0.000    0.000  {getattr}
                                                                                2    0.000    0.000  {method '__reduce_ex__' of 'object' objects}
                                                                               16    0.000    0.000  {method 'get' of 'dict' objects}
index.py:1121(append)                                                  ->       1    0.000    0.000  index.py:109(__new__)
                                                                                1    0.000    0.000  index.py:1093(_ensure_compat_append)
                                                                                1    0.000    0.000  {numpy.core.multiarray.concatenate}
{pandas.lib.list_to_object_array}                                      ->
merge.py:962(_get_comb_axis)                                           ->       1    0.000    0.000  index.py:5721(_get_combined_index)
internals.py:79(_consolidate_key)                                      ->      96    0.000    0.000  internals.py:228(dtype)
MCMC.py:93(use_step_method)                                            ->       1    0.000    0.000  stepper.py:20(__init__)
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {setattr}
generic.py:1172(_clear_item_cache)                                     ->      26    0.000    0.000  {method 'clear' of 'dict' objects}
{print}                                                                ->
internals.py:3687(_multi_blockify)                                     ->       1    0.000    0.000  internals.py:2073(make_block)
                                                                                1    0.000    0.000  internals.py:3691(<lambda>)
                                                                                1    0.000    0.000  internals.py:3721(_stack_arrays)
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
index.py:5721(_get_combined_index)                                     ->       1    0.000    0.000  index.py:5677(_ensure_index)
                                                                                1    0.000    0.000  index.py:5736(_get_distinct_indexes)
                                                                                1    0.000    0.000  index.py:5740(_union_indexes)
                                                                                2    0.000    0.000  {len}
{method 'ravel' of 'numpy.ndarray' objects}                            ->
stepper.py:20(__init__)                                                ->       1    0.000    0.000  StepMethods.py:391(__init__)
indexing.py:165(_convert_slice_indexer)                                ->       1    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  index.py:817(_convert_slice_indexer)
                                                                                1    0.000    0.000  {min}
common.py:2644(is_sequence)                                            ->      14    0.000    0.000  {isinstance}
                                                                               21    0.000    0.000  {iter}
                                                                               14    0.000    0.000  {len}
StepMethods.py:391(__init__)                                           ->       6    0.000    0.000  PyMCObjects.py:823(get_value)
                                                                                1    0.000    0.000  StepMethods.py:197(__init__)
                                                                                2    0.000    0.000  fromnumeric.py:1462(shape)
                                                                                1    0.000    0.000  fromnumeric.py:1852(all)
                                                                                1    0.000    0.000  numeric.py:141(ones)
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
frame.py:361(_get_axes)                                                ->       2    0.000    0.000  common.py:2144(_default_index)
{pandas.algos.ensure_float64}                                          ->
numeric.py:2125(identity)                                              ->       1    0.000    0.000  twodim_base.py:190(eye)
numerictypes.py:949(_can_coerce_all)                                   ->      86    0.000    0.000  {len}
index.py:1481(difference)                                              ->       1    0.000    0.000  index.py:109(__new__)
                                                                                1    0.000    0.000  index.py:582(_assert_can_do_setop)
                                                                                1    0.000    0.000  index.py:587(_convert_can_do_setop)
                                                                                2    0.000    0.000  index.py:1001(__iter__)
                                                                                1    0.000    0.000  index.py:1233(equals)
                                                                                1    0.000    0.000  {sorted}
index.py:987(inferred_type)                                            ->       8    0.000    0.000  {pandas.lib.infer_dtype}
index.py:5740(_union_indexes)                                          ->       1    0.000    0.000  index.py:1365(union)
                                                                                1    0.000    0.000  index.py:5787(_sanitize_and_check)
                                                                                1    0.000    0.000  {hasattr}
                                                                                1    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
arrayprint.py:533(__init__)                                            ->       3    0.000    0.000  arrayprint.py:547(fillFormat)
frame.py:2319(reindexer)                                               ->       3    0.000    0.000  index.py:3434(equals)
                                                                                3    0.000    0.000  series.py:308(values)
                                                                                3    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
twodim_base.py:190(eye)                                                ->       1    0.000    0.000  {numpy.core.multiarray.zeros}
series.py:2575(_sanitize_index)                                        ->      42    0.000    0.000  {isinstance}
                                                                               28    0.000    0.000  {len}
common.py:368(notnull)                                                 ->       1    0.000    0.000  common.py:212(isnull)
                                                                                1    0.000    0.000  numeric.py:1910(isscalar)
frame.py:2666(_maybe_casted_values)                                    ->       7    0.000    0.000  index.py:263(values)
                                                                               14    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {pandas.lib.maybe_convert_objects}
arrayprint.py:547(fillFormat)                                          ->       3    0.000    0.000  numeric.py:2809(__init__)
                                                                                3    0.000    0.000  numeric.py:2813(__enter__)
                                                                                3    0.000    0.000  numeric.py:2818(__exit__)
{pandas.lib.maybe_convert_objects}                                     ->
utils.py:100(get_column_headers)                                       ->       7    0.000    0.000  index.py:1001(__iter__)
series.py:1003(__iter__)                                               ->       2    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                4    0.000    0.000  numerictypes.py:736(issubdtype)
                                                                                6    0.000    0.000  series.py:288(dtype)
                                                                                2    0.000    0.000  series.py:308(values)
                                                                                2    0.000    0.000  {iter}
index.py:1365(union)                                                   ->       1    0.000    0.000  index.py:582(_assert_can_do_setop)
                                                                                1    0.000    0.000  index.py:3434(equals)
                                                                                1    0.000    0.000  index.py:5677(_ensure_index)
                                                                                1    0.000    0.000  {len}
generic.py:225(_construct_axes_dict)                                   ->       6    0.000    0.000  generic.py:318(_get_axis)
                                                                                6    0.000    0.000  {method 'update' of 'dict' objects}
fromnumeric.py:803(argsort)                                            ->      12    0.000    0.000  {method 'argsort' of 'numpy.ndarray' objects}
internals.py:371(astype)                                               ->       1    0.000    0.000  internals.py:375(_astype)
internals.py:4168(get_mgr_concatenation_plan)                          ->       2    0.000    0.000  internals.py:119(mgr_locs)
                                                                                2    0.000    0.000  internals.py:2204(shape)
                                                                                2    0.000    0.000  internals.py:2246(_is_single_block)
                                                                                2    0.000    0.000  internals.py:4338(__init__)
                                                                                2    0.000    0.000  {method 'items' of 'dict' objects}
internals.py:375(_astype)                                              ->       1    0.000    0.000  internals.py:97(is_categorical_astype)
                                                                                1    0.000    0.000  internals.py:228(dtype)
                                                                                1    0.000    0.000  internals.py:504(copy)
internals.py:4370(is_null)                                             ->       1    0.000    0.000  common.py:212(isnull)
                                                                                1    0.000    0.000  {max}
                                                                                1    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
common.py:1961(_possibly_convert_platform)                             ->       1    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {hasattr}
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {pandas.lib.list_to_object_array}
                                                                                1    0.000    0.000  {pandas.lib.maybe_convert_objects}
frame.py:2164(_ensure_valid_index)                                     ->      17    0.000    0.000  {len}
{method 'clear' of 'dict' objects}                                     ->
fromnumeric.py:2838(var)                                               ->       1    0.000    0.000  _methods.py:77(_var)
Model.py:829(trace)                                                    ->       1    0.000    0.000  base.py:363(trace)
                                                                                1    0.000    0.000  {isinstance}
numeric.py:2428(seterr)                                                ->      10    0.000    0.000  numeric.py:2524(geterr)
                                                                               10    0.000    0.000  {numpy.core.umath.geterrobj}
                                                                               10    0.000    0.000  {numpy.core.umath.seterrobj}
_methods.py:77(_var)                                                   ->       1    0.000    0.000  _methods.py:43(_count_reduce_items)
                                                                                2    0.000    0.000  numeric.py:464(asanyarray)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {issubclass}
                                                                                1    0.000    0.000  {max}
                                                                                2    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
PyMCObjects.py:834(set_value)                                          ->       5    0.000    0.000  PyMCObjects.py:880(fget)
                                                                                5    0.000    0.000  PyMCObjects.py:1046(_get_observed)
                                                                                5    0.000    0.000  numeric.py:464(asanyarray)
                                                                                5    0.000    0.000  {method 'click' of 'pymc.LazyFunction.Counter' objects}
progressbar.py:58(bar)                                                 ->       5    0.000    0.000  progressbar.py:69(replace_at)
                                                                               15    0.000    0.000  {len}
base.py:363(trace)                                                     ->       1    0.000    0.000  copy.py:66(copy)
function_base.py:3427(delete)                                          ->       1    0.000    0.000  numeric.py:141(ones)
                                                                                2    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.can_cast}
lapack.py:255(get_lapack_funcs)                                        ->       1    0.000    0.000  blas.py:226(_get_funcs)
Model.py:254(_finalize)                                                ->       1    0.000    0.000  Model.py:511(fget)
                                                                                1    0.000    0.000  Model.py:514(fset)
                                                                                1    0.000    0.000  Model.py:772(save_state)
                                                                                1    0.000    0.000  base.py:332(_finalize)
{method '__reduce_ex__' of 'object' objects}                           ->       2    0.000    0.000  copy_reg.py:95(_slotnames)
{method 'nonzero' of 'numpy.ndarray' objects}                          ->
inspect.py:804(getargspec)                                             ->       3    0.000    0.000  <string>:8(__new__)
                                                                                3    0.000    0.000  inspect.py:67(ismethod)
                                                                                3    0.000    0.000  inspect.py:142(isfunction)
                                                                                3    0.000    0.000  inspect.py:744(getargs)
groupby.py:1363(group_info)                                            ->       1    0.000    0.000  groupby.py:1372(_get_compressed_labels)
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {pandas.algos.ensure_int64}
arrayprint.py:700(__init__)                                            ->       2    0.000    0.000  arrayprint.py:533(__init__)
blas.py:226(_get_funcs)                                                ->       1    0.000    0.000  blas.py:182(find_best_blas_type)
                                                                                2    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {method 'get' of 'dict' objects}
Model.py:616(tally)                                                    ->       1    0.000    0.000  base.py:260(tally)
common.py:2380(_index_labels_to_array)                                 ->       2    0.000    0.000  common.py:2347(_asarray_tuplesafe)
                                                                                4    0.000    0.000  {isinstance}
{method 'randn' of 'mtrand.RandomState' objects}                       ->
groupby.py:1372(_get_compressed_labels)                                ->       2    0.000    0.000  groupby.py:2020(labels)
                                                                                1    0.000    0.000  groupby.py:2026(group_index)
                                                                                2    0.000    0.000  {len}
                                                                                1    0.000    0.000  {numpy.core.multiarray.arange}
base.py:260(tally)                                                     ->       3    0.000    0.000  ram.py:86(tally)
                                                                                1    0.000    0.000  {range}
generic.py:702(__contains__)                                           ->       6    0.000    0.000  generic.py:366(_info_axis)
                                                                                6    0.000    0.000  index.py:1045(__contains__)
numeric.py:2813(__enter__)                                             ->       5    0.000    0.000  numeric.py:2428(seterr)
index.py:610(set_names)                                                ->       4    0.000    0.000  common.py:2603(is_list_like)
                                                                                1    0.000    0.000  index.py:343(_shallow_copy)
                                                                                2    0.000    0.000  index.py:602(_set_names)
_ni_support.py:70(_get_output)                                         ->       6    0.000    0.000  {numpy.core.multiarray.zeros}
frame.py:599(__len__)                                                  ->      19    0.000    0.000  {len}
{method 'add' of 'pandas.lib.BlockPlacement' objects}                  ->
internals.py:3721(_stack_arrays)                                       ->       1    0.000    0.000  internals.py:3724(_asarray_compat)
                                                                                1    0.000    0.000  internals.py:3730(_shape_compat)
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {numpy.core.multiarray.empty}
{numpy.core.multiarray.putmask}                                        ->
base.py:232(_initialize)                                               ->       3    0.000    0.000  ram.py:54(_initialize)
                                                                                1    0.000    0.000  six.py:560(iteritems)
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {method 'keys' of 'dict' objects}
defmatrix.py:290(__array_finalize__)                                   ->       1    0.000    0.000  defmatrix.py:290(__array_finalize__)
                                                                               11    0.000    0.000  {isinstance}
ram.py:86(tally)                                                       ->       1    0.000    0.000  MCMC.py:188(<lambda>)
                                                                                1    0.000    0.000  Model.py:222(_sum_deviance)
                                                                                1    0.000    0.000  PyMCObjects.py:823(get_value)
                                                                                1    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
Node.py:399(__init__)                                                  ->      16    0.000    0.000  {hasattr}
ops.py:543(na_op)                                                      ->       2    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                1    0.000    0.000  {getattr}
Container.py:539(get_value)                                            ->       8    0.000    0.000  {method 'run' of 'pymc.Container_values.DCValue' objects}
index.py:248(__array__)                                                ->      19    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
Model.py:772(save_state)                                               ->       1    0.000    0.000  MCMC.py:386(get_state)
                                                                                1    0.000    0.000  base.py:353(savestate)
internals.py:2694(<lambda>)                                            ->       2    0.000    0.000  index.py:331(view)
index.py:331(view)                                                     ->       2    0.000    0.000  index.py:343(_shallow_copy)
                                                                                2    0.000    0.000  {isinstance}
fromnumeric.py:1380(nonzero)                                           ->       6    0.000    0.000  {method 'nonzero' of 'numpy.ndarray' objects}
groupby.py:1874(__init__)                                              ->       1    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                1    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                                1    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                1    0.000    0.000  groupby.py:2175(_convert_grouper)
                                                                                1    0.000    0.000  {getattr}
                                                                                6    0.000    0.000  {isinstance}
index.py:1001(__iter__)                                                ->      10    0.000    0.000  index.py:263(values)
                                                                               10    0.000    0.000  {iter}
blas.py:182(find_best_blas_type)                                       ->       1    0.000    0.000  numerictypes.py:970(find_common_type)
                                                                                1    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                1    0.000    0.000  {method 'index' of 'list' objects}
index.py:1093(_ensure_compat_append)                                   ->       2    0.000    0.000  index.py:263(values)
                                                                                1    0.000    0.000  index.py:1136(_ensure_compat_concat)
                                                                                5    0.000    0.000  {isinstance}
StepMethods.py:197(__init__)                                           ->       1    0.000    0.000  Node.py:131(_get_parents)
                                                                                1    0.000    0.000  PyMCObjects.py:1046(_get_observed)
                                                                                1    0.000    0.000  function_base.py:47(iterable)
                                                                                1    0.000    0.000  six.py:555(itervalues)
                                                                                4    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
                                                                                3    0.000    0.000  {method 'add' of 'set' objects}
                                                                                1    0.000    0.000  {method 'join' of 'str' objects}
inspect.py:744(getargs)                                                ->       3    0.000    0.000  inspect.py:209(iscode)
                                                                                3    0.000    0.000  {range}
numeric.py:2818(__exit__)                                              ->       5    0.000    0.000  numeric.py:2428(seterr)
MCMC.py:386(get_state)                                                 ->       1    0.000    0.000  Model.py:757(get_state)
                                                                                1    0.000    0.000  StepMethods.py:323(current_state)
                                                                                1    0.000    0.000  {method 'copy' of 'dict' objects}
series.py:381(__len__)                                                 ->       6    0.000    0.000  {len}
ram.py:54(_initialize)                                                 ->       1    0.000    0.000  MCMC.py:188(<lambda>)
                                                                                1    0.000    0.000  Model.py:222(_sum_deviance)
                                                                                1    0.000    0.000  PyMCObjects.py:823(get_value)
                                                                                3    0.000    0.000  fromnumeric.py:1462(shape)
                                                                                3    0.000    0.000  {numpy.core.multiarray.array}
                                                                                3    0.000    0.000  {numpy.core.multiarray.zeros}
indexing.py:1648(check_bool_indexer)                                   ->       1    0.000    0.000  index.py:3434(equals)
                                                                                1    0.000    0.000  numeric.py:394(asarray)
                                                                                1    0.000    0.000  {isinstance}
function_base.py:3832(append)                                          ->       2    0.000    0.000  fromnumeric.py:1291(ravel)
                                                                                2    0.000    0.000  numeric.py:464(asanyarray)
                                                                                2    0.000    0.000  {numpy.core.multiarray.concatenate}
index.py:668(rename)                                                   ->       1    0.000    0.000  index.py:610(set_names)
{numpy.core.multiarray.empty_like}                                     ->
copy.py:306(_reconstruct)                                              ->       2    0.000    0.000  copy_reg.py:92(__newobj__)
                                                                                2    0.000    0.000  {hasattr}
                                                                                2    0.000    0.000  {id}
                                                                                6    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'update' of 'dict' objects}
{iter}                                                                 ->
indexing.py:417(can_do_equal_len)                                      ->       1    0.000    0.000  frame.py:1774(__getitem__)
                                                                                1    0.000    0.000  function_base.py:47(iterable)
                                                                                1    0.000    0.000  index.py:1059(__getitem__)
                                                                                3    0.000    0.000  {len}
internals.py:4246(combine_concat_plans)                                ->       1    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'add' of 'pandas.lib.BlockPlacement' objects}
base.py:184(__get__)                                                   ->       1    0.000    0.000  base.py:507(_make_str_accessor)
six.py:560(iteritems)                                                  ->      12    0.000    0.000  {getattr}
                                                                               12    0.000    0.000  {iter}
                                                                               12    0.000    0.000  {method 'iteritems' of 'dict' objects}
PyMCObjects.py:1065(_get_moral_neighbors)                              ->       4    0.000    0.000  PyMCObjects.py:1055(_get_coparents)
                                                                                4    0.000    0.000  copy.py:66(copy)
                                                                               12    0.000    0.000  {isinstance}
internals.py:1258(should_store)                                        ->       5    0.000    0.000  internals.py:228(dtype)
                                                                                5    0.000    0.000  {issubclass}
{round}                                                                ->
Model.py:522(_assign_database_backend)                                 ->       1    0.000    0.000  Model.py:853(check_valid_object_name)
                                                                                1    0.000    0.000  PyMCObjects.py:880(fget)
                                                                                1    0.000    0.000  ram.py:165(__init__)
                                                                                1    0.000    0.000  {dir}
                                                                                2    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'add' of 'set' objects}
                                                                                1    0.000    0.000  {method 'get' of 'dict' objects}
base.py:507(_make_str_accessor)                                        ->       1    0.000    0.000  common.py:2585(is_object_dtype)
                                                                                1    0.000    0.000  series.py:288(dtype)
                                                                                1    0.000    0.000  strings.py:1059(__init__)
                                                                                2    0.000    0.000  {isinstance}
generic.py:2203(consolidate)                                           ->       2    0.000    0.000  generic.py:2197(_consolidate_inplace)
{method 'run' of 'pymc.Container_values.DCValue' objects}              ->      20    0.000    0.000  PyMCObjects.py:823(get_value)
internals.py:1304(should_store)                                        ->       3    0.000    0.000  common.py:2495(is_integer_dtype)
                                                                                3    0.000    0.000  internals.py:228(dtype)
groupby.py:1443(_get_aggregate_function)                               ->       2    0.000    0.000  groupby.py:1447(get_func)
                                                                                2    0.000    0.000  {isinstance}
base.py:285(connect_model)                                             ->       3    0.000    0.000  ram.py:31(__init__)
                                                                                1    0.000    0.000  six.py:560(iteritems)
                                                                                1    0.000    0.000  {hasattr}
                                                                                1    0.000    0.000  {isinstance}
type_check.py:237(iscomplexobj)                                        ->       6    0.000    0.000  numeric.py:394(asarray)
                                                                                6    0.000    0.000  {issubclass}
MCMC.py:135(assign_step_methods)                                       ->       1    0.000    0.000  MCMC.py:405(restore_sm_state)
                                                                                1    0.000    0.000  utils.py:835(crawl_dataless)
                                                                                2    0.000    0.000  {len}
index.py:752(is_integer)                                               ->       1    0.000    0.000  index.py:987(inferred_type)
                                                                                2    0.000    0.000  index.py:3413(inferred_type)
frame.py:4811(extract_index)                                           ->       1    0.000    0.000  index.py:5677(_ensure_index)
                                                                                1    0.000    0.000  index.py:5740(_union_indexes)
                                                                                1    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
{method 'transpose' of 'numpy.ndarray' objects}                        ->       1    0.000    0.000  defmatrix.py:290(__array_finalize__)
fromnumeric.py:2633(round_)                                            ->       1    0.000    0.000  fromnumeric.py:40(_wrapit)
numeric.py:2524(geterr)                                                ->      10    0.000    0.000  {numpy.core.umath.geterrobj}
fromnumeric.py:1462(shape)                                             ->       2    0.000    0.000  frame.py:418(shape)
PyMCObjects.py:823(get_value)                                          ->
generic.py:366(_info_axis)                                             ->      10    0.000    0.000  {getattr}
Model.py:222(_sum_deviance)                                            ->       4    0.000    0.000  PyMCObjects.py:903(get_logp)
                                                                                2    0.000    0.000  {sum}
progressbar.py:121(progress_bar)                                       ->       1    0.000    0.000  progressbar.py:42(__init__)
                                                                                1    0.000    0.000  progressbar.py:113(run_from_ipython)
StepMethods.py:556(reject)                                             ->       3    0.000    0.000  PyMCObjects.py:895(revert)
generic.py:280(_from_axes)                                             ->       1    0.000    0.000  frame.py:200(__init__)
                                                                                1    0.000    0.000  {isinstance}
PyMCObjects.py:134(attach_parents)                                     ->       3    0.000    0.000  PyMCObjects.py:145(attach_extended_parents)
                                                                                3    0.000    0.000  six.py:555(itervalues)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {method 'add' of 'set' objects}
algorithms.py:403(_get_data_algo)                                      ->       1    0.000    0.000  common.py:2495(is_integer_dtype)
                                                                                1    0.000    0.000  common.py:2526(is_datetime_or_timedelta_dtype)
                                                                                1    0.000    0.000  common.py:2547(is_float_dtype)
                                                                                1    0.000    0.000  {pandas.algos.ensure_object}
fromnumeric.py:1291(ravel)                                             ->       3    0.000    0.000  numeric.py:394(asarray)
                                                                                3    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
index.py:1136(_ensure_compat_concat)                                   ->       1    0.000    0.000  {any}
                                                                                2    0.000    0.000  {isinstance}
Model.py:121(seed)                                                     ->       1    0.000    0.000  Model.py:105(_get_generations)
frame.py:418(shape)                                                    ->       6    0.000    0.000  {len}
numeric.py:1347(rollaxis)                                              ->
generic.py:2225(_is_mixed_type)                                        ->       2    0.000    0.000  generic.py:2189(_protect_consolidate)
index.py:312(_coerce_to_ndarray)                                       ->      13    0.000    0.000  {isinstance}
base.py:332(_finalize)                                                 ->       3    0.000    0.000  base.py:131(_finalize)
                                                                                1    0.000    0.000  base.py:345(commit)
                                                                                1    0.000    0.000  {range}
CommonDeterministics.py:684(new_method)                                ->       1    0.000    0.000  InstantiationDecorators.py:40(check_special_methods)
                                                                                1    0.000    0.000  Node.py:227(__str__)
Model.py:511(fget)                                                     ->
{numpy.lib._compiled_base.bincount}                                    ->
{method 'flatten' of 'numpy.ndarray' objects}                          ->
internals.py:4396(get_reindexed_values)                                ->       2    0.000    0.000  internals.py:874(get_values)
                                                                                2    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
arrayprint.py:465(_formatArray)                                        ->       1    0.000    0.000  arrayprint.py:230(repr_format)
                                                                                1    0.000    0.000  arrayprint.py:457(_extendLine)
                                                                                2    0.000    0.000  {len}
                                                                                2    0.000    0.000  {range}
arrayprint.py:639(__init__)                                            ->       2    0.000    0.000  {len}
                                                                                1    0.000    0.000  {max}
                                                                                2    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
Model.py:757(get_state)                                                ->       1    0.000    0.000  PyMCObjects.py:823(get_value)
                                                                                9    0.000    0.000  {getattr}
copy_reg.py:95(_slotnames)                                             ->       2    0.000    0.000  {hasattr}
                                                                                2    0.000    0.000  {method 'get' of 'dictproxy' objects}
learn_matrix.py:67(sequences)                                          ->
index.py:5736(_get_distinct_indexes)                                   ->       3    0.000    0.000  index.py:5737(<genexpr>)
                                                                                1    0.000    0.000  {method 'values' of 'dict' objects}
index_tricks.py:231(_retval)                                           ->
fromnumeric.py:40(_wrapit)                                             ->       1    0.000    0.000  numeric.py:394(asarray)
                                                                                1    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {method 'round' of 'numpy.ndarray' objects}
{method 'reshape' of 'numpy.ndarray' objects}                          ->       1    0.000    0.000  defmatrix.py:290(__array_finalize__)
Model.py:105(_get_generations)                                         ->       1    0.000    0.000  utils.py:858(find_generations)
                                                                                1    0.000    0.000  {hasattr}
internals.py:3730(_shape_compat)                                       ->       1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
PyMCObjects.py:1075(_get_markov_blanket)                               ->       2    0.000    0.000  PyMCObjects.py:1065(_get_moral_neighbors)
fromnumeric.py:694(sort)                                               ->       1    0.000    0.000  numeric.py:464(asanyarray)
                                                                                1    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'sort' of 'numpy.ndarray' objects}
internals.py:4357(dtype)                                               ->       2    0.000    0.000  internals.py:228(dtype)
                                                                                2    0.000    0.000  internals.py:4348(needs_filling)
progressbar.py:42(__init__)                                            ->       1    0.000    0.000  progressbar.py:20(__init__)
                                                                                1    0.000    0.000  progressbar.py:29(update)
internals.py:1542(should_store)                                        ->       1    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                1    0.000    0.000  {issubclass}
PyMCObjects.py:895(revert)                                             ->       3    0.000    0.000  {method 'unclick' of 'pymc.LazyFunction.Counter' objects}
internals.py:2973(value_getitem)                                       ->
internals.py:3724(_asarray_compat)                                     ->       1    0.000    0.000  series.py:308(values)
                                                                                1    0.000    0.000  {isinstance}
six.py:555(itervalues)                                                 ->       4    0.000    0.000  {getattr}
                                                                                4    0.000    0.000  {iter}
                                                                                4    0.000    0.000  {method 'itervalues' of 'dict' objects}
ram.py:31(__init__)                                                    ->       3    0.000    0.000  base.py:71(__init__)
groupby.py:1447(get_func)                                              ->       3    0.000    0.000  {getattr}
numerictypes.py:736(issubdtype)                                        ->       4    0.000    0.000  numerictypes.py:668(issubclass_)
                                                                                4    0.000    0.000  {issubclass}
groupby.py:2175(_convert_grouper)                                      ->       1    0.000    0.000  index.py:3434(equals)
                                                                                1    0.000    0.000  series.py:308(values)
                                                                                2    0.000    0.000  {isinstance}
index.py:817(_convert_slice_indexer)                                   ->       1    0.000    0.000  index.py:752(is_integer)
                                                                                3    0.000    0.000  index.py:851(validate)
                                                                                2    0.000    0.000  index.py:871(is_int)
                                                                                3    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {isinstance}
index.py:3427(is_all_dates)                                            ->
frame.py:4863(_prep_ndarray)                                           ->       1    0.000    0.000  numeric.py:394(asarray)
                                                                                1    0.000    0.000  {isinstance}
index.py:602(_set_names)                                               ->       1    0.000    0.000  base.py:218(__getitem__)
                                                                                2    0.000    0.000  {len}
{method 'random_sample' of 'mtrand.RandomState' objects}               ->
numeric.py:2809(__init__)                                              ->       5    0.000    0.000  {method 'pop' of 'dict' objects}
{method 'startswith' of 'str' objects}                                 ->
frame.py:5092(_homogenize)                                             ->       1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
{map}                                                                  ->       2    0.000    0.000  indexing.py:518(<lambda>)
                                                                                2    0.000    0.000  numeric.py:394(asarray)
progressbar.py:26(percentage)                                          ->
generic.py:1794(_needs_reindex_multi)                                  ->       1    0.000    0.000  common.py:2193(_count_not_none)
                                                                                1    0.000    0.000  {method 'values' of 'dict' objects}
generic.py:2227(<lambda>)                                              ->       2    0.000    0.000  internals.py:2573(is_mixed_type)
generic.py:661(__hash__)                                               ->       1    0.000    0.000  {method 'format' of 'str' objects}
defmatrix.py:66(asmatrix)                                              ->       2    0.000    0.000  defmatrix.py:244(__new__)
utils.py:858(find_generations)                                         ->       1    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
                                                                                2    0.000    0.000  {method 'update' of 'set' objects}
{sys.settrace}                                                         ->
index.py:582(_assert_can_do_setop)                                     ->       2    0.000    0.000  common.py:2603(is_list_like)
MCMC.py:405(restore_sm_state)                                          ->       1    0.000    0.000  base.py:358(getstate)
                                                                                2    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                1    0.000    0.000  {method 'update' of 'dict' objects}
generic.py:1227(_check_setitem_copy)                                   ->
{pandas.lib.get_reverse_indexer}                                       ->
InstantiationDecorators.py:40(check_special_methods)                   ->
{numpy.core.umath.seterrobj}                                           ->
{pandas.lib.checknull}                                                 ->
index.py:273(tolist)                                                   ->       1    0.000    0.000  index.py:263(values)
index.py:5787(_sanitize_and_check)                                     ->       1    0.000    0.000  {len}
{method 'astype' of 'numpy.generic' objects}                           ->
InstantiationDecorators.py:128(stochastic)                             ->
defmatrix.py:928(getT)                                                 ->       1    0.000    0.000  {method 'transpose' of 'numpy.ndarray' objects}
PyMCObjects.py:63(extend_parents)                                      ->       4    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {method 'add' of 'set' objects}
inspect.py:67(ismethod)                                                ->       3    0.000    0.000  {isinstance}
learn_matrix.py:70(pymcdf)                                             ->
progressbar.py:20(__init__)                                            ->       1    0.000    0.000  {time.time}
base.py:218(__getitem__)                                               ->       1    0.000    0.000  {function __getitem__ at 0x7fa38da43b18}
                                                                                1    0.000    0.000  {isinstance}
common.py:2185(_try_sort)                                              ->       1    0.000    0.000  {sorted}
{max}                                                                  ->
numerictypes.py:668(issubclass_)                                       ->       4    0.000    0.000  {issubclass}
common.py:2541(is_numeric_dtype)                                       ->       1    0.000    0.000  common.py:2461(_get_dtype_type)
                                                                                2    0.000    0.000  {issubclass}
{method 'item' of 'numpy.ndarray' objects}                             ->
internals.py:2573(is_mixed_type)                                       ->       2    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                2    0.000    0.000  {len}
copy.py:113(_copy_with_constructor)                                    ->
{method 'round' of 'numpy.ndarray' objects}                            ->
{method 'add' of 'set' objects}                                        ->
progressbar.py:69(replace_at)                                          ->
StepMethods.py:323(current_state)                                      ->       6    0.000    0.000  {getattr}
indexing.py:1584(length_of_indexer)                                    ->       1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
PyMCObjects.py:145(attach_extended_parents)                            ->       2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {method 'add' of 'set' objects}
groupby.py:2103(<genexpr>)                                             ->       1    0.000    0.000  index.py:1045(__contains__)
ram.py:132(__getitem__)                                                ->       1    0.000    0.000  {range}
copy_reg.py:92(__newobj__)                                             ->       2    0.000    0.000  {built-in method __new__ of type object at 0x7fa3a7597bc0}
utils.py:80(choose_dict)                                               ->
internals.py:97(is_categorical_astype)                                 ->       1    0.000    0.000  common.py:2569(is_categorical_dtype)
common.py:2193(_count_not_none)                                        ->       1    0.000    0.000  {sum}
PyMCObjects.py:1055(_get_coparents)                                    ->       6    0.000    0.000  {method 'add' of 'set' objects}
internals.py:3691(<lambda>)                                            ->       1    0.000    0.000  series.py:288(dtype)
_ni_support.py:38(_extend_mode_to_code)                                ->
{numpy.core.umath.geterrobj}                                           ->
internals.py:4348(needs_filling)                                       ->       2    0.000    0.000  {method 'values' of 'dict' objects}
{time.time}                                                            ->
{method 'swapaxes' of 'numpy.ndarray' objects}                         ->
{method 'to_array' of 'pandas.hashtable.ObjectVector' objects}         ->
{method 'sort' of 'numpy.ndarray' objects}                             ->
{dir}                                                                  ->
groupby.py:2135(is_in_obj)                                             ->       1    0.000    0.000  {id}
learn_matrix.py:150(<dictcomp>)                                        ->       4    0.000    0.000  {len}
StepMethods.py:478(hastings_factor)                                    ->
groupby.py:2097(<genexpr>)                                             ->       1    0.000    0.000  {callable}
                                                                                1    0.000    0.000  {isinstance}
groupby.py:1225(__init__)                                              ->       1    0.000    0.000  {len}
{numpy.core.multiarray.result_type}                                    ->
groupby.py:511(__getattr__)                                            ->
progressbar.py:113(run_from_ipython)                                   ->
function_base.py:47(iterable)                                          ->       2    0.000    0.000  {iter}
index.py:5737(<genexpr>)                                               ->       2    0.000    0.000  {id}
{method 'format' of 'str' objects}                                     ->
<string>:8(__new__)                                                    ->       6    0.000    0.000  {built-in method __new__ of type object at 0x7fa3a7597bc0}
_ni_support.py:90(_check_axis)                                         ->
Model.py:514(fset)                                                     ->
{pandas.lib.array_equivalent_object}                                   ->
ram.py:165(__init__)                                                   ->
merge.py:932(_get_result_dim)                                          ->       1    0.000    0.000  generic.py:386(ndim)
base.py:358(getstate)                                                  ->       1    0.000    0.000  {getattr}
base.py:71(__init__)                                                   ->
arrayprint.py:457(_extendLine)                                         ->       2    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'rstrip' of 'str' objects}
MCMC.py:188(<lambda>)                                                  ->       2    0.000    0.000  {getattr}
internals.py:4338(__init__)                                            ->
{pandas.index.convert_scalar}                                          ->
inspect.py:209(iscode)                                                 ->       3    0.000    0.000  {isinstance}
utils.py:835(crawl_dataless)                                           ->       1    0.000    0.000  {len}
indexing.py:518(<lambda>)                                              ->       2    0.000    0.000  {isinstance}
groupby.py:2098(<genexpr>)                                             ->       1    0.000    0.000  {isinstance}
{zip}                                                                  ->
InstantiationDecorators.py:36(enable_special_methods)                  ->
Model.py:631(commit)                                                   ->       1    0.000    0.000  base.py:345(commit)
groupby.py:2125(is_in_axis)                                            ->       1    0.000    0.000  groupby.py:2171(_is_label_like)
common.py:1293(<lambda>)                                               ->
arrayprint.py:716(__init__)                                            ->
InstantiationDecorators.py:32(disable_special_methods)                 ->
{method 'values' of 'dict' objects}                                    ->
arrayprint.py:689(__init__)                                            ->       2    0.000    0.000  arrayprint.py:661(__init__)
fromnumeric.py:495(transpose)                                          ->       1    0.000    0.000  {method 'transpose' of 'numpy.ndarray' objects}
PyMCObjects.py:1046(_get_observed)                                     ->
indexing.py:1731(is_nested_tuple)                                      ->       2    0.000    0.000  {isinstance}
{method 'get' of 'dictproxy' objects}                                  ->
inspect.py:142(isfunction)                                             ->       3    0.000    0.000  {isinstance}
arrayprint.py:230(repr_format)                                         ->       1    0.000    0.000  {repr}
{method 'extend' of 'list' objects}                                    ->
groupby.py:1319(names)                                                 ->
index.py:599(_get_names)                                               ->
Model.py:853(check_valid_object_name)                                  ->       1    0.000    0.000  {method 'append' of 'list' objects}
internals.py:2442(<genexpr>)                                           ->
base.py:345(commit)                                                    ->
base.py:353(savestate)                                                 ->
{function __getitem__ at 0x7fa38da43b18}                               ->
arrayprint.py:744(__init__)                                            ->
{repr}                                                                 ->
Node.py:227(__str__)                                                   ->
{id}                                                                   ->
{numpy.core.multiarray.can_cast}                                       ->
{callable}                                                             ->
index.py:587(_convert_can_do_setop)                                    ->       1    0.000    0.000  {isinstance}
arrayprint.py:661(__init__)                                            ->
{method 'rstrip' of 'str' objects}                                     ->
series.py:474(axes)                                                    ->
merge.py:1020(_maybe_check_integrity)                                  ->
Node.py:131(_get_parents)                                              ->
groupby.py:2020(labels)                                                ->
index.py:871(is_int)                                                   ->
groupby.py:3269(_reindex_output)                                       ->       1    0.000    0.000  {len}
{method 'click' of 'pymc.LazyFunction.Counter' objects}                ->
PyMCObjects.py:880(fget)                                               ->
{_functools.reduce}                                                    ->
groupby.py:2171(_is_label_like)                                        ->       1    0.000    0.000  {isinstance}
indexing.py:405(<genexpr>)                                             ->       1    0.000    0.000  common.py:2607(is_null_slice)
misc.py:126(_datacopied)                                               ->
index.py:3413(inferred_type)                                           ->
strings.py:1059(__init__)                                              ->
{method 'update' of 'set' objects}                                     ->
{method 'copy' of 'dict' objects}                                      ->
base.py:131(_finalize)                                                 ->
internals.py:467(_try_operate)                                         ->
common.py:2194(<genexpr>)                                              ->
{method 'lower' of 'str' objects}                                      ->
{method 'join' of 'str' objects}                                       ->
{method 'unclick' of 'pymc.LazyFunction.Counter' objects}              ->
index.py:851(validate)                                                 ->
indexing.py:170(_has_valid_setitem_indexer)                            ->
{method 'index' of 'list' objects}                                     ->
{method 'disable' of '_lsprof.Profiler' objects}                       ->


